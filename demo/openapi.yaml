openapi: 3.0.2
info:
  version: v1
  title: Te Rito APIs
  description: "<p>Derived from SIF Data Model (New Zealand) v3.2 (rc2)</p>
    <p><strong>Release Date: </strong>21-Oct-2020</p>"
  contact:
    name: Ministry of Education
    url: http://www.terito.govt.nz
    email: terito@education.govt.nz
x-tagGroups:
  - name: Organisation
    x-displayName: Organisations & Providers
    tags:
      - Organisation
      - OrganisationRelationship
      - StaffPersonal
      - StudentProviderEnrolment
  - name: Schedule
    x-displayName: Schedule & Timetable
    tags:
      - ScheduleAttendanceOverview
      - Schedule
      - SchedulePeriod
      - ScheduleTerm
      - ScheduleDate
tags:
  - name: Organisation
    x-displayName: Organisation
    description: Operations on recognised Education Provider entities (ECEs, Schools &
      Tertiary  Education Institutions), Communities (KƒÅhui Ako, Learning
      Support Clusters, etc.), and  others (Teen Parent Units, Activity Centres.
      etc.)
  - name: OrganisationRelationship
    x-displayName: Organisation Relationship
    description: <p>Operations on recognised relationships between two education
      Organisations. The two organisations are referred to as the Source
      Organisation and the Related Organisation.</p> <p>RelationshipType records
      the nature of the relationship between the two organisations, and gives
      guidance on which is the Source Organisation and which is the Related
      Organisation.</p>
  - name: StaffPersonal
    x-displayName: Staff Personal
    description: >-
      <p>Operations on the personal contact and demographic information relating
      to

      staff members, who might be a teacher or other employee of a Provider.</p>


      <p>Searching for staff personal record by name, email address (or whatever) is

      available via <a href="#tag/Search">Te Rito Search API</a>.</p>


      <p>Non personal information relating to the staff member's relationship with Providers

      is stored in the <a href="#tag/StaffAssignment">StaffAssignment</a> data object.</p>
  - name: StudentProviderEnrolment
    x-displayName: Student Provider Enrolment
    description: >-
      <p>Operations on a single student's association with an education provider
      for the purpose of receiving educational servics.</p> 

      <p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>
  - name: ScheduleAttendanceOverview
    x-displayName: Schedule & Attendance Overview
    description: >-
      <p> The Schedule & Attendance domain describes the school's schedule or
      timetable, along with transactional entities that record a Student's
          attendance at & absence from Providers. Attendance is recorded at either Day, Half-Day or individual Period granuality at the choice of the 
          Provider; and reported back in summary form. </p>
        <img src="domains/SIFNZ-LogicalModel-TimetableAttendanceDomain.png" usemap="#Schedule &amp; AttendanceMap" />
        <map title="Schedule &amp; AttendanceMap" name="Schedule &amp; AttendanceMap">
          <area title="StudentPersonal" shape="rect" coords="36,134,151,170" href="#tag/StudentPersonal" />
          <area title="Organisation" shape="rect" coords="479,43,899,80" href="#tag/Organisation" />
          <area title="StudentAttendanceTimeList" shape="rect" coords="183,189,342,223" href="#tag/StudentAttendanceTimeList" />
          <area title="StudentAttendanceSummary" shape="rect" coords="306,139,466,175" href="#tag/StudentAttendanceSummary" />
          <area title="TeachingGroup" shape="rect" coords="646,514,744,549" href="#tag/TeachingGroup" />
          <area title="ProviderCourse" shape="rect" coords="647,607,743,655" href="#tag/ProviderCourse" />
          <area title="Schedule" shape="rect" coords="756,163,845,200" href="#tag/Schedule" />
          <area title="ScheduleTerm" shape="rect" coords="595,165,669,199" href="#tag/ScheduleTerm" />
          <area title="ScheduleHoliday" shape="rect" coords="642,240,733,275" href="#tag/ScheduleHoliday" />
          <area title="ScheduleDate" shape="rect" coords="436,223,523,279" href="#tag/ScheduleDate" />
          <area title="ScheduleEvent" shape="rect" coords="296,307,386,342" href="#tag/ScheduleEvent" />
          <area title="SchedulePeriod" shape="rect" coords="418,366,530,401" href="#tag/SchedulePeriod" />
          <area title="ScheduleAcademicDay" shape="rect" coords="626,360,757,394" href="#tag/ScheduleAcademicDay" />
          <area title="BellSchedule" shape="rect" coords="645,306,735,351" href="#tag/BellSchedule" />
          <area title="TeachingGroupEvent" shape="rect" coords="635,406,748,464" href="#tag/TeachingGroupEvent" />
        </map>


      # Schedule & Attendance


      The `Schedule` data objects in the 

      [SIF NZ Data Model](http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/DomainMap.html#Domain__ScheduleAttendance)

      have been designed to be as flexible as possible to accomodate the myriad of different scheduling and timetabling structures used within 

      the New Zealand Education System. 


      ## Schedule, AcademicDay, Period and BellSchedule

      <img src="domains/schedule/Figure_1a.png" usemap="#Figure_1aMap" style="display:block; margin-left:auto; margin-right:auto;"/>

      <div style="text-align:center"><strong>Figure 1a: Schedules, Days & Periods</strong></div>

      <map name="Figure_1aMap">
         <area title="Organisation" shape="rect" coords="27,32,218,69" href="#tag/Organisation" />
         <area title="Schedule" shape="rect" coords="204,107,287,141" href="#tag/Schedule" />
         <area title="ScheduleAcademicDay" shape="rect" coords="412,99,547,146" href="#tag/ScheduleAcademicDay" />
         <area title="SchedulePeriod" shape="rect" coords="646,106,746,140" href="#tag/SchedulePeriod" />
         <area title="BellSchedule" shape="rect" coords="339,186,419,220" href="#tag/BellSchedule" />
      </map>


      A Schedule is set up by a `Provider` to manage their timetable for their students, teachers, curriculum

      and resources for part or all of a calendar year. 


      The structure of a Schedule is held in the `Schedule`, `ScheduleAcademicDay`, `SchedulePeriod` and

      `BellSchedule` data objects.


      A Schedule can be considered a rotation of one or more **academic days**, defined by a `ScheduleAcademicDay`

      object. Each academic day represents a regular structured day undertaken by the Provider. The academic days do

      not have to have the same structure across a single rotation through the `Schedule`. For instance, at Hogwarts

      High, days A through D are made of 5 periods, each of which are defined by `SchedulePeriod`, with day E only

      consisting of 4 periods with the last period longer than usual (2 hours instead of 1 hour.

       Based on the two types of day structures (A - D and E), Hogwarts High can assign one of two Bell schedules, held within the
      `BellSchedule` data object. The Bell schedules defines when each Period of the `ScheduleAcademicDay` begins and

      ends, e.g. Period 1 is 9am - 9:50am, Period 2 is 10am - 10:50am etc.


      Figure 1, below, depicts the period structure and bell schedules of the two academic days at Hogwarts High:

      - **Days A through D** have 5 periods of equal length, with a break between periods 2 & 3; and a longer lunch break between periods 3 & 4.

      - **Day E** - has a similar structure, except period 4 takes up the whole afternoon.



      ![Hogwarts High Schedule for secondary school years](domains/schedule/Figure_1.png)

      <div style="margin-top:-1.2em; text-align:center"><strong>Figure 1: Hogwarts High Schedule for secondary school years</strong></div>



      A school may have multiple schedule structures for different year groups. For instance, a composite school, the

      primary school level students may have a bell schedule different to that of secondary school students. Figure2,

      below, depicts the bell schedule for the primary level students at Hogwarts High. 



      ![Hogwarts High Schedule for primary school years](domains/schedule/Figure_2.png)

      <div style="margin-top:-1.2em; text-align:center;"><strong>Figure 2: Hogwarts High Schedule for primary school years</strong></div>


      ## Schedule Dates


      Once defined, the structure of the `Schedule` can be mapped to a specific calendar date as needed. The mapping

      between academic days and schedule periods to specific calendar days is held in the `ScheduleDate` data object.

      Each calendar date is associated with an `ScheduleAcademicDay`, which in turn is associated with the relevant 

      `BellSchedule` and `SchedulePeriod`.


      For example, at Hogwarts High for the secondary level students, academic days A through D take place on Mondays

      to Thursdays and academic day E on Friday. If 1st of July is a Monday, which is academic day A, the bell schedule

      and period for academic day A apply to 1st of July. Similarly, the bell schedule and the periods for each of the

      academic days B to E can be applied to July 2nd to July 5th, as shown below. 



      ![Hogwarts High Schedule for secondary years with Academic Days mapped to Schedule Periods](domains/schedule/Figure_3.png)

      <div style="margin-top:-1.2em; text-align:center;"><strong>Figure 3: Hogwarts High Schedule for secondary years with Academic Days mapped to Schedule Periods</strong></div>



      ![Hogwarts High Schedule for primary years with Academic Days mapped to Schedule Periods](domains/schedule/Figure_4.png)

      <div style="margin-top:-1.2em; text-align:center;"><strong>Figure 4: Hogwarts High Schedule for primary years with Academic Days mapped to Schedule Periods</strong></div>



      ## Teaching Group Timetable


      The `Schedule` can also be used to create the providers' teaching groups. A teaching group's timetable

      specifies the `ScheduleAcademicDay` it is being taught on, the curriculum being taught, who is being taught

      and the assigned location. This timetable is held in the `TeachingGroupEvent` data object.


      Below is an example of the timetable for Hogwart‚Äôs Purple teaching group, which follows the Secondary level

      `Schedule`, and Yellow teaching group which follows the Primary level `Schedule`.



      ![Hogwarts High Secondary Teaching Group Purple Schedule](domains/schedule/Figure_5.png)

      <div style="margin-top:-1.2em; text-align:center;"><strong>Figure 5: Hogwarts High Secondary Teaching Group Purple Schedule</strong></div>



      ![Hogwarts High Primary Teaching Group Purple Schedule](domains/schedule/Figure_6.png)

      <div style="margin-top:-1.2em; text-align:center;"><strong>Figure 6:Hogwarts High Primary Teaching Group Purple Schedule</strong></div>



      Combining the teaching group‚Äôs timetable from TeachingGroupEvent data object with the calendar date assignment

      data from ScheduleDate data object gives a completed date specific timetable for Hogwarts Purple teaching groups.



      ![Hogwarts High Secondary Teaching Group Purple Schedule with Dates](domains/schedule/Figure_7.png)

      <div style="margin-top:-1.2em; text-align:center;"><strong>Figure 7: Hogwarts High Secondary Teaching Group Purple Schedule with Dates</strong></div>



      It works just as well for simple timetables, with straightforward morning and afternoon periods as per the

      Yellow teaching group example below.



      ![Hogwarts High Primary Teaching Group Purple Schedule with Dates](domains/schedule/Figure_8.png)

      <div style="margin-top:-1.2em; text-align:center;"><strong>Figure 8: Hogwarts High Primary Teaching Group Purple Schedule with Dates</strong></div>


      ## Schedule Variations


      Every so often one off events will occur that may impact the regular schedule. These one off events could

      impact a single date, or multiple dates, or one or more periods on a specific date(s). 


      Events that impact the schedule are held in the `ScheduleEvent` data object. There is a set of predefined

      standardised effects an event may have.  (Note: Providers also have the ability to create custom effects

      if one of the standardised options does not provide the required change to the schedule.) 


      ### Standardised Effects


      |Standard Effect|Effect Description|

      |---|---|

      |No effect|This event has no effect on the school schedule, but it is recorded for display purposes.|

      |Pause Schedule Rotation|Temporarily suspend the academic day rotation until a subsequent Resume Schedule event occurs.|

      |Resume Schedule Rotation|Resume an academic day rotation previously suspended (paused).|

      |Renumber Schedule Rotation|This event causes the day rotation on the school calendar to be renumbered, starting with any academic days specified as impacted by the event. If any terms are included in the event, those terms are activated effective on the start date of this event.|

      |Insert Day into Rotation|This event causes an insertion in the normal academic day rotation of the schedule. That is to say, any academic days and bell schedules specified in the event are scheduled for the duration of this event, or school is cancelled if there are no academic days specified; after the event ends the academic day rotation resumes from the point at which it was interrupted, e.g. if it was Day 1 before the event, then it will be Day 2 afterwards.|

      |Displace Day in Rotation|This event causes a displacement in the normal academic day rotation of the schedule. That is to say, any academic days or bell schedules specified in the event are scheduled for the duration of this event, or school is cancelled if there are no academic days values specified; after the event ends the rotation resumes from the point it would be at had the event not occurred, e.g. if it was Day 1 before the event, and the event duration was 1 day, then it will be Day 3 afterwards; Day 2 is overwritten by the event.|

      |Start Term|Start one or more terms specified on this date without changing the academic day rotation.|

      |End Term|This event terminates the academic schedule for any term(s) specified in the event. A term is required to be specified when using this schedule effect. Note that events take effect at midnight on the start date, so the designated term(s) do not occur on the actual day of the End Schedule event (i.e. the day prior to the event's start date is the last day the term(s) are in session).|

      |Customised Schedule Effect|This event creates a custom effect; with an arbitrary, customised set of periods and matching bell schedule replacing the normal rotation days of the schedule for the duration of the event.|

      |Cancel Schedule Day|Cancel one or more specified Academic Days that would normally occur on this date. This is generally used to partially cancel the school schedule at the event start time on the event date. To fully cancel school on event date, use either the "insert" or "displace" schedule effect.|

      |Additional Day|Set one or more additional academic days to apply to this calendar date in addition to those defined in the schedule. This can also be used to schedule school on a day on which it would not normally occur, such as a weekend. As a convenience, a list of academic days to remove from the calendar while this event is in effect can also be supplied.|




      ## Terms and Holidays


      Other additional information about the schedule can also be captured such as the length of the terms

      a provider follows, or what holidays are recognised in the area that the provider lives and whether

      or not they impact the schedule, e.g. public holidays, regional holidays. 


      These are stored in ScheduleTerm and ScheduleHoliday respectively.
    externalDocs:
      description: Schedule & Attendance Domain in SIF NZ Data Model
      url: http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/DomainMap.html#Domain__ScheduleAttendance
  - name: Schedule
    x-displayName: Timetable Schedule
    description: Operations for maintaining a timetable Schedule for the given Provider.
  - name: SchedulePeriod
    x-displayName: Schedule Period
    description: Operations on a Period that takes place within one or more  <a
      href="AcademicDay">AcademicDays</a> in a particular <a
      href="#tag/Schedule">Schedule</a> at the given Provider.
  - name: ScheduleTerm
    x-displayName: Schedule Term
    description: <p>Operations maintaining the structure of a particular school term,
      semester, or calendar year for a particular timetable <a
      href="#tag/Schedule">Schedule</a> at the given Provider.</p>
  - name: ScheduleDate
    x-displayName: Schedule Date
    description: <p>Operations maintaining the detail of which timetable <a
      href="#tag/Schedule">Schedule</a>, <a
      href="#tag/ScheduleAcademicDay">ScheduleAcademicDay</a> and <a
      href="#tag/BellSchedule">BellSchedule</a> are being followed on a specific
      calendar date at the given Provider.</p>
servers:
  - url: https://{host}.edsby.co.nz/{basePath}
    description: The demonstration Te Rito server
    variables:
      host:
        default: southern
        description: southern.edsby.co.nz is the default demonstration platform
      basePath:
        default: sif
security:
  - sifDataObject:
      - SMS
paths:
  /search:
    get:
      tags:
        - Search
      summary: Search for Staff and Students
      description: >-
        Search operation returning partial <a
        href="#tag/StaffPersonal">StaffPersonal</a>

        and <a href="#tag/StudentPersonal">StudentPersonal</a> objects.
      operationId: search
      security:
        - sifDataObject:
            - FIRST
            - SUPS
            - SMS
      parameters:
        - name: objects
          in: query
          description: "CSV delimited list of data object names; limits the search to only
            some data objects: staffpersonal, studentpersonal"
          required: false
          schema:
            type: string
          example: StudentPersonal,StaffPersonal
        - name: pattern
          in: query
          description: Select objects where search index includes the given pattern
            pattern; `pattern=Sco*`
          required: false
          schema:
            type: string
          example: Sco*
        - name: query
          in: query
          description: Use lucene query language to select objects;
          required: false
          schema:
            type: string
          example: PersonInfo.Name.GivenName:joel
        - name: max
          in: query
          description: Maximum items per page, default 10,000; `max=100`; applies to any
            call with repeated data
          required: false
          schema:
            type: integer
            minimum: 1
          example: 100
        - name: page
          in: query
          description: Return nth page of results; default 0	`page=2`; applies to any call
            with repeated data
          required: false
          schema:
            type: integer
            minimum: 0
          example: 2
        - name: human
          in: query
          description: For code set fields, translate code to human readable form;	`human=1`
          required: false
          schema:
            type: integer
            enum:
              - 0
              - 1
          example: 1
        - name: Accept
          in: header
          description: Standard HTTP accept header, choose between JSON and XML for
            response. Defaults to XML if this header is missing.
          required: true
          schema:
            type: string
            enum:
              - application/json
              - application/xml
          example: application/json
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Search:
                    type: object
                    properties:
                      Summary:
                        type: object
                        description: Statistical summary of the search results returned.
                        properties:
                          Shown:
                            type: integer
                            description: Count of objects returned in this response
                          More:
                            type: integer
                            description: Count of objects yet to be returned, because of
                              `max` page size limit
                      SearchResults:
                        type: object
                        description: The data objects found
                        properties:
                          Personals:
                            type: object
                            description: Staff &amp; Student Personal objects found
                            properties:
                              StaffPersonals:
                                type: object
                                description: StaffPersonal objects found
                                properties:
                                  StaffPersonal:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        Name:
                                          type: string
                                          description: Full name from the search index
                                        Rank:
                                          type: number
                                          description: Degree of match to search criteria
                                        Type:
                                          type: string
                                          description: Internal data type of object returned
                                        ProviderName:
                                          type: array
                                          description: Array of strings, being the names of
                                            the Providers associated with the
                                            person
                                          items:
                                            type: string
                                        ProviderRefId:
                                          type: array
                                          description: Array of strings, being the
                                            ProviderRefIds of the Providers
                                            associated with the person
                                          items:
                                            type: string
                                        LocalId:
                                          type: string
                                          description: The StaffPersonalLocalId of the
                                            staff member located
                                        RefId:
                                          type: string
                                          description: The StaffPersonalRefId of the staff
                                            member located
                                        ESLPairwiseId:
                                          type: string
                                          description: Internal user provisioning
                                            identifier for the staff member
                                            located
                                        PersonInfo:
                                          type: object
                                          description: Partial PersonInfo object
                                          properties:
                                            Name:
                                              type: object
                                              description: Person name, in pieces and
                                                complete
                                              properties:
                                                Title:
                                                  type: string
                                                FamilyName:
                                                  type: string
                                                GivenName:
                                                  type: string
                                                MiddleName:
                                                  type: string
                                                PreferredGivenName:
                                                  type: string
                                                Suffix:
                                                  type: string
                                                FullName:
                                                  type: string
                                            Demographics:
                                              type: object
                                              properties:
                                                BirthDate:
                                                  type: string
                                                  format: date
                                            EmailList:
                                              type: object
                                              properties:
                                                Email:
                                                  type: object
                                                  properties:
                                                    Address:
                                                      type: string
                              StudentPersonals:
                                type: object
                                properties:
                                  StudentPersonal:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        Name:
                                          type: string
                                          description: Full name from the search index
                                        Rank:
                                          type: number
                                          description: Degree of match to search criteria
                                        Type:
                                          type: string
                                          description: Internal data type of object returned
                                        ProviderName:
                                          type: array
                                          description: Array of strings, being the names of
                                            the Providers associated with the
                                            person
                                          items:
                                            type: string
                                        ProviderRefId:
                                          type: array
                                          description: Array of strings, being the
                                            ProviderRefIds of the Providers
                                            associated with the person
                                          items:
                                            type: string
                                        LocalId:
                                          type: string
                                          description: The StudentPersonalLocalId of the
                                            student located
                                        RefId:
                                          type: string
                                          description: The StudentPersonalRefId of the
                                            student located
                                        NationalStudentNumber:
                                          type: string
                                          description: The National Student Number of the
                                            student located
                                        PersonInfo:
                                          type: object
                                          description: Partial PersonInfo object
                                          properties:
                                            Name:
                                              type: object
                                              description: Person name, in pieces and
                                                complete
                                              properties:
                                                Title:
                                                  type: string
                                                FamilyName:
                                                  type: string
                                                GivenName:
                                                  type: string
                                                MiddleName:
                                                  type: string
                                                PreferredGivenName:
                                                  type: string
                                                Suffix:
                                                  type: string
                                                FullName:
                                                  type: string
                                            Demographics:
                                              type: object
                                              properties:
                                                BirthDate:
                                                  type: string
                                                  format: date
                                                Gender:
                                                  $ref: jsonSchema.NZ.create.yaml#/definitions/NZCodeSetsGender
                                            EmailList:
                                              type: object
                                              properties:
                                                Email:
                                                  type: object
                                                  properties:
                                                    Address:
                                                      type: string
        "401":
          description: Request didn't have Bearer token
          content:
            application/json:
              schema:
                type: object
                title: error
                required:
                  - error
                  - when
                  - errorstr
                additionalProperties: false
                properties:
                  error:
                    type: integer
                    description: Edsby defined error code
                  when:
                    type: string
                    format: date-time
                    description: Date and Time of when the HTTP request was processed.
                  errorstr:
                    type: string
                    description: Narrative text describing the error
                  refId:
                    type: string
                    description: Data object refId of the object being created/updated
                  localId:
                    type: string
                    description: Data object localId of the object being created/updated
              example:
                error: 401
                when: 2020-07-16T20:00:46.000Z
                errorstr: "Unauthorised request: Bearer token missing??"
        "422":
          description: Request didn't have Accept header
          content:
            application/json:
              schema:
                type: object
                title: error
                required:
                  - error
                  - when
                  - errorstr
                additionalProperties: false
                properties:
                  error:
                    type: integer
                    description: Edsby defined error code
                  when:
                    type: string
                    format: date-time
                    description: Date and Time of when the HTTP request was processed.
                  errorstr:
                    type: string
                    description: Narrative text describing the error
                  refId:
                    type: string
                    description: Data object refId of the object being created/updated
                  localId:
                    type: string
                    description: Data object localId of the object being created/updated
              example:
                error: 422
                when: 2020-07-16T20:00:46.000Z
                errorstr: "Unprocessable request: Accept or X-Edsby-OrganisationRefId
                  header missing?? Request body invalid??  Check sl-violations
                  header in response"
  /organisation:
    post:
      tags:
        - Organisation
        - OrganisationBulk
      summary: Create one or more Organisations
      description: Bulk operation to create one or more Organisations, each of which
        represents a single recognised Education Provider entity (ECEs, Schools
        & Tertiary Education Institutions), Community (KƒÅhui Ako, Learning
        Support Clusters, etc.), or others unit(Teen Parent Units, Activity
        Centres. etc.)
      operationId: createOrganisations
      parameters:
        - name: x-http-method-override
          in: header
          description: Rather than CREATE records, treat this request as a SYNC request.
          required: false
          schema:
            type: string
            oneOf:
              - enum:
                  - IncrementalSync
                title: Incremental Synchronise Request
                description: Add and Update records from the POST to ensure all records are
                  present in the repository
              - enum:
                  - FullSync
                title: Full Synchronise Request
                description: Add, Update and **Delete** records to ensure that ONLY those
                  records are present in the repository
          example: IncrementalSync
        - $ref: "#/paths/~1search/get/parameters/6"
      security:
        - sifDataObject:
            - FIRST
      requestBody:
        description: CRUD operation on Organisation
        content:
          application/json:
            schema:
              type: object
              properties:
                Organisations:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
            example:
              Organisations:
                Organisation:
                  - OrganisationRefId: "922"
                    OrganisationLocalId: "42342"
                    Name: Hogwart's Area School
                    Authority: STATE
                    SectorRole: "35003"
                    Type: "10030"
                    OperationalStatus: O
                    EntityOpen: 1652-04-01
                    EducationRegion: "12013"
                    SpecialEducationDistrict: "182011"
                    AddressList:
                      Address:
                        - Type: RU
                          Role: PHY
                          Line1: 1175 Lake Ferry Rd
                          Suburb: RD 1
                          City: Martinborough
                    CommunicationChannelList:
                      Channel:
                        - Notes: Attendance System (Self Service)
                          Type: WEB
                          Value: http://att.hogwarts.school.nz
                        - Notes: School Website
                          Type: WEB
                          Value: http://www.hogwarts.school.nz
                    ContactList:
                      Contact:
                        - Name:
                            FamilyName: Dumbledore
                            GivenName: Albus
                            FullName: Albus Dumbledore
                          PositionTitle: Headmaster
                          Role: PRI
                          AddressList:
                            Address:
                              - Type: TH
                                Role: PHY
                                Line1: 533 Hogwart's Way
                                City: Hogsmead
                                PostalCode: "7733"
                          EmailList:
                            Email: []
                          PhoneNumberList:
                            PhoneNumber: []
                        - Name:
                            FamilyName: Hagrid
                            GivenName: Rubeus
                            FullName: Rubeus Hagrid
                          PositionTitle: Gamekeeper
                          Role: DIR
                          AddressList:
                            Address:
                              - Type: TH
                                Role: PHY
                                Line1: The Enchanted Wood
                                Line2: 533 Hogwart's Way
                                City: Hogsmead
                                PostalCode: "7733"
                          EmailList:
                            Email: []
                          PhoneNumberList:
                            PhoneNumber: []
                    EmailList:
                      Email:
                        - Type: PRIM
                          Address: stuart@gmail.com
                    LocationList:
                      Location:
                        - Description: Only Campus
                          Address:
                            Type: RU
                            Role: PHY
                            Line1: 1175 Lake Ferry Rd
                            Suburb: RD 1
                            City: Martinborough
                            PostalCode: "5781"
                          GridLocation:
                            Latitude: -41.2814719
                            Longitude: 175.3458472
                          StatisticalAreaList:
                            StatisticalArea:
                              - SpatialUnitType: GE
                                Code: "058"
                              - SpatialUnitType: TA
                                Code: "050"
                              - SpatialUnitType: WA
                                Code: "05003"
                    PhoneNumberList:
                      PhoneNumber:
                        - Notes: Attendance Office (Automated)
                          Usage: SMS
                          Type: WTE
                          Number: (0274) 300 9991
                        - Notes: Attendance Office
                          Usage: INT
                          Type: WTE
                          Number: (04) 300 9992
                        - Notes: School Secretary DDI
                          Type: WTE
                          Number: (04) 300 9993
                    SchoolService:
                      CoEdStatus: COED
                      Decile: 5
                      NewEntrantPolicyList:
                        EnactedPolicy:
                          - EffectiveTo: 2018-12-31
                            Policy: AE
                          - EffectiveFrom: 2019-01-01
                            Policy: CE
                      SchoolYearList:
                        SchoolYear:
                          - YearLevel: 1
                            FIRSTSchoolYearGenderId: 1001
                            Gender: C
                          - YearLevel: 2
                            FIRSTSchoolYearGenderId: 1002
                            Gender: C
                          - YearLevel: 3
                            FIRSTSchoolYearGenderId: 1003
                            Gender: C
                          - YearLevel: 4
                            FIRSTSchoolYearGenderId: 1004
                            Gender: C
                          - YearLevel: 5
                            FIRSTSchoolYearGenderId: 1005
                            Gender: C
                          - YearLevel: 6
                            FIRSTSchoolYearGenderId: 1006
                            Gender: C
                          - YearLevel: 7
                            FIRSTSchoolYearGenderId: 1007
                            Gender: C
                          - YearLevel: 8
                            FIRSTSchoolYearGenderId: 1008
                            Gender: C
                          - YearLevel: 9
                            FIRSTSchoolYearGenderId: 1009
                            Gender: F
                          - YearLevel: 10
                            FIRSTSchoolYearGenderId: 1010
                            Gender: F
                          - YearLevel: 11
                            FIRSTSchoolYearGenderId: 1011
                            Gender: F
                          - YearLevel: 12
                            FIRSTSchoolYearGenderId: 1012
                            Gender: F
                          - YearLevel: 13
                            FIRSTSchoolYearGenderId: 1013
                            Gender: F
          application/xml:
            schema:
              type: object
              properties:
                Organisations:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
            example: |-
              <Organisations>
                <Organisation>
                  <AddressList/>
                  <CommunicationChannelList/>
                  <ContactList>
                    <Contact>
                      <Name>
                        <FamilyName>Dumbledore</FamilyName>
                        <GivenName>Albus</GivenName>
                        <FullName>Albus Dumbledore</FullName>
                      </Name>
                      <PositionTitle>Lead School Headmaster</PositionTitle>
                      <Role>PRI</Role>
                      <AddressList>
                        <Address>
                          <Type>TH</Type>
                          <Role>PHY</Role>
                          <Line1>533 Hogwart's Way</Line1>
                          <City>Hogsmead</City>
                          <PostalCode>7733</PostalCode>
                        </Address>
                      </AddressList>
                      <EmailList/>
                      <PhoneNumberList/>
                    </Contact>
                  </ContactList>
                  <EmailList>
                    <Email>
                      <Type>PRIM</Type>
                      <Address>hogwarts@mailinator.com</Address>
                    </Email>
                  </EmailList>
                  <LocationList/>
                  <Name>Masterton (Whakaoriori) KƒÅhui Ako</Name>
                  <PhoneNumberList>
                    <PhoneNumber>
                      <Notes>Lead School Secretary (Mobile)</Notes>
                      <Type>MOB</Type>
                      <Number>(021) 300 999</Number>
                    </PhoneNumber>
                  </PhoneNumberList>
                  <Type>998</Type>
                  <OrganisationRefId>922</OrganisationRefId>
                  <OrganisationLocalId>99204</OrganisationLocalId>
                </Organisation>
              </Organisations>
      responses:
        "200":
          description: Create successful; returns created objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  Organisations:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
              example:
                $ref: "#/paths/~1organisation/post/requestBody/content/application~\
                  1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Organisations:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
              example:
                $ref: "#/paths/~1organisation/post/requestBody/content/application~\
                  1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects created, some creates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          type: object
                          title: error
                          required:
                            - error
                            - when
                            - errorstr
                          additionalProperties: false
                          properties:
                            error:
                              type: integer
                              description: Edsby defined error code
                            when:
                              type: string
                              format: date-time
                              description: Date and Time of when the HTTP request was
                                processed.
                            errorstr:
                              type: string
                              description: Narrative text describing the error
                            refId:
                              type: string
                              description: Data object refId of the object being
                                created/updated
                            localId:
                              type: string
                              description: Data object localId of the object being
                                created/updated
                    - type: object
                      title: Organisation
                      properties:
                        Organisation:
                          $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                - Organisation:
                    OrganisationRefId: "922"
                    OrganisationLocalId: "42342"
                    Name: Hogwart's Area School
                    Authority: STATE
                    SectorRole: "35003"
                    Type: "10030"
                    OperationalStatus: O
                    EntityOpen: 1652-04-01
                    EducationRegion: "12013"
                    SpecialEducationDistrict: "182011"
                    AddressList:
                      Address:
                        - Type: RU
                          Role: PHY
                          Line1: 1175 Lake Ferry Rd
                          Suburb: RD 1
                          City: Martinborough
                    CommunicationChannelList:
                      Channel:
                        - Notes: Attendance System (Self Service)
                          Type: WEB
                          Value: http://att.hogwarts.school.nz
                        - Notes: School Website
                          Type: WEB
                          Value: http://www.hogwarts.school.nz
                    ContactList:
                      Contact:
                        - Name:
                            FamilyName: Dumbledore
                            GivenName: Albus
                            FullName: Albus Dumbledore
                          PositionTitle: Headmaster
                          Role: PRI
                          AddressList:
                            Address:
                              - Type: TH
                                Role: PHY
                                Line1: 533 Hogwart's Way
                                City: Hogsmead
                                PostalCode: "7733"
                          EmailList:
                            Email: []
                          PhoneNumberList:
                            PhoneNumber: []
                        - Name:
                            FamilyName: Hagrid
                            GivenName: Rubeus
                            FullName: Rubeus Hagrid
                          PositionTitle: Gamekeeper
                          Role: DIR
                          AddressList:
                            Address:
                              - Type: TH
                                Role: PHY
                                Line1: The Enchanted Wood
                                Line2: 533 Hogwart's Way
                                City: Hogsmead
                                PostalCode: "7733"
                          EmailList:
                            Email: []
                          PhoneNumberList:
                            PhoneNumber: []
                    EmailList:
                      Email:
                        - Type: PRIM
                          Address: stuart@gmail.com
                    LocationList:
                      Location:
                        - Description: Only Campus
                          Address:
                            Type: RU
                            Role: PHY
                            Line1: 1175 Lake Ferry Rd
                            Suburb: RD 1
                            City: Martinborough
                            PostalCode: "5781"
                          GridLocation:
                            Latitude: -41.2814719
                            Longitude: 175.3458472
                          StatisticalAreaList:
                            StatisticalArea:
                              - SpatialUnitType: GE
                                Code: "058"
                              - SpatialUnitType: TA
                                Code: "050"
                              - SpatialUnitType: WA
                                Code: "05003"
                    PhoneNumberList:
                      PhoneNumber:
                        - Notes: Attendance Office (Automated)
                          Usage: SMS
                          Type: WTE
                          Number: (0274) 300 9991
                        - Notes: Attendance Office
                          Usage: INT
                          Type: WTE
                          Number: (04) 300 9992
                        - Notes: School Secretary DDI
                          Type: WTE
                          Number: (04) 300 9993
                    SchoolService:
                      CoEdStatus: COED
                      Decile: 5
                      NewEntrantPolicyList:
                        EnactedPolicy:
                          - EffectiveTo: 2018-12-31
                            Policy: AE
                          - EffectiveFrom: 2019-01-01
                            Policy: CE
                      SchoolYearList:
                        SchoolYear:
                          - YearLevel: 1
                            FIRSTSchoolYearGenderId: 1001
                            Gender: C
                          - YearLevel: 2
                            FIRSTSchoolYearGenderId: 1002
                            Gender: C
                          - YearLevel: 3
                            FIRSTSchoolYearGenderId: 1003
                            Gender: C
                          - YearLevel: 4
                            FIRSTSchoolYearGenderId: 1004
                            Gender: C
                          - YearLevel: 5
                            FIRSTSchoolYearGenderId: 1005
                            Gender: C
                          - YearLevel: 6
                            FIRSTSchoolYearGenderId: 1006
                            Gender: C
                          - YearLevel: 7
                            FIRSTSchoolYearGenderId: 1007
                            Gender: C
                          - YearLevel: 8
                            FIRSTSchoolYearGenderId: 1008
                            Gender: C
                          - YearLevel: 9
                            FIRSTSchoolYearGenderId: 1009
                            Gender: F
                          - YearLevel: 10
                            FIRSTSchoolYearGenderId: 1010
                            Gender: F
                          - YearLevel: 11
                            FIRSTSchoolYearGenderId: 1011
                            Gender: F
                          - YearLevel: 12
                            FIRSTSchoolYearGenderId: 1012
                            Gender: F
                          - YearLevel: 13
                            FIRSTSchoolYearGenderId: 1013
                            Gender: F
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              type: object
                              title: error
                              required:
                                - error
                                - when
                                - errorstr
                              additionalProperties: false
                              properties:
                                error:
                                  type: integer
                                  description: Edsby defined error code
                                when:
                                  type: string
                                  format: date-time
                                  description: Date and Time of when the HTTP request was
                                    processed.
                                errorstr:
                                  type: string
                                  description: Narrative text describing the error
                                refId:
                                  type: string
                                  description: Data object refId of the object being
                                    created/updated
                                localId:
                                  type: string
                                  description: Data object localId of the object being
                                    created/updated
                        - type: object
                          title: Organisation
                          properties:
                            Organisation:
                              $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example: >-
                <Response>
                  <Organisation>
                    <AddressList/>
                    <CommunicationChannelList/>
                    <ContactList>
                      <Contact>
                        <Name>
                          <FamilyName>Dumbledore</FamilyName>
                          <GivenName>Albus</GivenName>
                          <FullName>Albus Dumbledore</FullName>
                        </Name>
                        <PositionTitle>Lead School Headmaster</PositionTitle>
                        <Role>PRI</Role>
                        <AddressList>
                          <Address>
                            <Type>TH</Type>
                            <Role>PHY</Role>
                            <Line1>533 Hogwart's Way</Line1>
                            <City>Hogsmead</City>
                            <PostalCode>7733</PostalCode>
                          </Address>
                        </AddressList>
                        <EmailList/>
                        <PhoneNumberList/>
                      </Contact>
                    </ContactList>
                    <EmailList>
                      <Email>
                        <Type>PRIM</Type>
                        <Address>hogwarts@mailinator.com</Address>
                      </Email>
                    </EmailList>
                    <LocationList/>
                    <Name>Masterton (Whakaoriori) KƒÅhui Ako</Name>
                    <PhoneNumberList>
                      <PhoneNumber>
                        <Notes>Lead School Secretary (Mobile)</Notes>
                        <Type>MOB</Type>
                        <Number>(021) 300 999</Number>
                      </PhoneNumber>
                    </PhoneNumberList>
                    <Type>998</Type>
                    <OrganisationRefId>922</OrganisationRefId>
                    <OrganisationLocalId>99204</OrganisationLocalId>
                  </Organisation>    
                  <Error>
                    <error>1009</error>
                    <when>2020-07-16T20:00:46.000Z</when>
                    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                    <localId>ST-002</localId>
                    <refId/>
                  </Error>      
                </Response>
    get:
      tags:
        - Organisation
        - OrganisationBulk
      summary: Retrieve one or more Organisations
      description: Bulk operation to retrieve all available Organisations, each of which
        represents a single recognised Education Provider entity (ECEs, Schools
        & Tertiary  Education Institutions), Community (KƒÅhui Ako, Learning
        Support Clusters, etc.), or others unit(Teen Parent Units, Activity
        Centres. etc.)
      operationId: getOrganisations
      parameters:
        - name: fields
          in: query
          description: Return only specified fields	`fields=name,nid`
          required: false
          schema:
            type: string
          example: PersonInfo.Name.FamilyName,PersonInfo.Name.GivenName
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - name: unwrap
          in: query
          description: Remove top level wrapper from json results in single result
            reponses;	`unwrap=1`
          required: false
          schema:
            enum:
              - 0
              - 1
              - 2
          example: 1
        - $ref: "#/paths/~1search/get/parameters/5"
        - name: sort
          in: query
          description: Sort results by specified field;	`sort=FamilyName`
          required: false
          schema:
            type: string
          example: PersonInfo.Name.FamilyName,PersonInfo.Name.GivenName
        - name: field
          in: query
          description: Field to filter on when used with **pattern**;	`field=FamilyName`
          required: false
          schema:
            type: string
          example: PersonName.Name.FamilyName
        - name: pattern
          in: query
          description: Filter results using pattern on **field**; `pattern=We*`
          required: false
          schema:
            type: string
          example: We*
        - $ref: "#/paths/~1search/get/parameters/6"
      security:
        - sifDataObject:
            - SMS
            - FIRST
            - SUPS
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Organisations:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
              example:
                $ref: "#/paths/~1organisation/post/requestBody/content/application~\
                  1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Organisations:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
              example:
                $ref: "#/paths/~1organisation/post/requestBody/content/application~\
                  1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Failed to retrieve object(s).
          content:
            application/json:
              schema:
                type: object
                title: error
                required:
                  - error
                  - when
                  - errorstr
                additionalProperties: false
                properties:
                  error:
                    type: integer
                    description: Edsby defined error code
                  when:
                    type: string
                    format: date-time
                    description: Date and Time of when the HTTP request was processed.
                  errorstr:
                    type: string
                    description: Narrative text describing the error
                  refId:
                    type: string
                    description: Data object refId of the object being created/updated
                  localId:
                    type: string
                    description: Data object localId of the object being created/updated
              example:
                error: 1009
                when: 2020-07-16T20:00:46.000Z
                errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required field
                  PersonInfo-Name-FamilyName (LastName) 'None'"
                localId: ST-002
            application/xml:
              schema:
                type: object
                title: error
                required:
                  - error
                  - when
                  - errorstr
                additionalProperties: false
                properties:
                  error:
                    type: integer
                    description: Edsby defined error code
                  when:
                    type: string
                    format: date-time
                    description: Date and Time of when the HTTP request was processed.
                  errorstr:
                    type: string
                    description: Narrative text describing the error
                  refId:
                    type: string
                    description: Data object refId of the object being created/updated
                  localId:
                    type: string
                    description: Data object localId of the object being created/updated
              example: >-
                <Error>
                  <error>1009</error>
                  <when>2020-07-16T20:00:46.000Z</when>
                  <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                  <localId>ST-002</localId>
                </Error>
    put:
      tags:
        - Organisation
        - OrganisationBulk
      summary: Update one or more Organisations
      description: "Bulk operation to update one or more Organisations, each of which
        represents a single recognised Education Provider entity (ECEs, Schools
        & Tertiary  Education Institutions), Community (KƒÅhui Ako, Learning
        Support Clusters, etc.), or others unit(Teen Parent Units, Activity
        Centres. etc.)    "
      operationId: updateOrganisations
      security:
        - sifDataObject:
            - FIRST
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
      requestBody:
        description: CRUD operation on Organisation
        content:
          application/json:
            schema:
              type: object
              properties:
                Organisations:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
            example:
              $ref: "#/paths/~1organisation/post/requestBody/content/application~1j\
                son/example"
          application/xml:
            schema:
              type: object
              properties:
                Organisations:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
            example:
              $ref: "#/paths/~1organisation/post/requestBody/content/application~1x\
                ml/example"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  Organisations:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
              example:
                $ref: "#/paths/~1organisation/post/requestBody/content/application~\
                  1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Organisations:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
              example:
                $ref: "#/paths/~1organisation/post/requestBody/content/application~\
                  1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects updated, some updates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: Organisation
                      properties:
                        Organisation:
                          $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                $ref: "#/paths/~1organisation/post/responses/default/content/applic\
                  ation~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: Organisation
                          properties:
                            Organisation:
                              $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                $ref: "#/paths/~1organisation/post/responses/default/content/applic\
                  ation~1xml/example"
    patch:
      tags:
        - Organisation
        - OrganisationBulk
      summary: Patch one or more Organisations
      description: Bulk operation to update one or more fields of one or more
        Organisations, each of which represents a single recognised Education
        Provider entity (ECEs, Schools & Tertiary  Education Institutions),
        Community (KƒÅhui Ako, Learning Support Clusters, etc.), or others
        unit(Teen Parent Units, Activity Centres. etc.)
      operationId: patchOrganisations
      security:
        - sifDataObject:
            - FIRST
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
      requestBody:
        description: CRUD operation on Organisation
        content:
          application/json:
            schema:
              type: object
              properties:
                Organisations:
                  $ref: jsonSchema.NZ.update.yaml#/properties/Organisations
            example:
              $ref: "#/paths/~1organisation/post/requestBody/content/application~1j\
                son/example"
          application/xml:
            schema:
              type: object
              properties:
                Organisations:
                  $ref: jsonSchema.NZ.update.yaml#/properties/Organisations
            example:
              $ref: "#/paths/~1organisation/post/requestBody/content/application~1x\
                ml/example"
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  Organisations:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
              example:
                $ref: "#/paths/~1organisation/post/requestBody/content/application~\
                  1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Organisations:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisations
              example:
                $ref: "#/paths/~1organisation/post/requestBody/content/application~\
                  1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects patched, some patches failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: Organisation
                      properties:
                        Organisation:
                          $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                $ref: "#/paths/~1organisation/post/responses/default/content/applic\
                  ation~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: Organisation
                          properties:
                            Organisation:
                              $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                $ref: "#/paths/~1organisation/post/responses/default/content/applic\
                  ation~1xml/example"
  "/organisation/{OrganisationRefId}":
    get:
      tags:
        - Organisation
        - OrganisationSingle
      summary: Retrieve a single Organisation
      description: "Retrive a particular Organisation, which represents a single recognised
        Education Provider entity (ECEs, Schools & Tertiary  Education
        Institutions), Community (KƒÅhui Ako, Learning Support Clusters, etc.),
        or others unit(Teen Parent Units, Activity Centres. etc.)    "
      operationId: getOrganisation
      security:
        - sifDataObject:
            - SMS
            - FIRST
            - SUPS
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider(or
            other Organisation); being worked on.</p>
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Organisation:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                Organisation:
                  OrganisationRefId: "922"
                  OrganisationLocalId: "42342"
                  Name: Hogwart's Area School
                  Authority: STATE
                  SectorRole: "35003"
                  Type: "10030"
                  OperationalStatus: O
                  EntityOpen: 1652-04-01
                  EducationRegion: "12013"
                  SpecialEducationDistrict: "182011"
                  AddressList:
                    Address:
                      - Type: RU
                        Role: PHY
                        Line1: 1175 Lake Ferry Rd
                        Suburb: RD 1
                        City: Martinborough
                  CommunicationChannelList:
                    Channel:
                      - Notes: Attendance System (Self Service)
                        Type: WEB
                        Value: http://att.hogwarts.school.nz
                      - Notes: School Website
                        Type: WEB
                        Value: http://www.hogwarts.school.nz
                  ContactList:
                    Contact:
                      - Name:
                          FamilyName: Dumbledore
                          GivenName: Albus
                          FullName: Albus Dumbledore
                        PositionTitle: Headmaster
                        Role: PRI
                        AddressList:
                          Address:
                            - Type: TH
                              Role: PHY
                              Line1: 533 Hogwart's Way
                              City: Hogsmead
                              PostalCode: "7733"
                        EmailList:
                          Email: []
                        PhoneNumberList:
                          PhoneNumber: []
                      - Name:
                          FamilyName: Hagrid
                          GivenName: Rubeus
                          FullName: Rubeus Hagrid
                        PositionTitle: Gamekeeper
                        Role: DIR
                        AddressList:
                          Address:
                            - Type: TH
                              Role: PHY
                              Line1: The Enchanted Wood
                              Line2: 533 Hogwart's Way
                              City: Hogsmead
                              PostalCode: "7733"
                        EmailList:
                          Email: []
                        PhoneNumberList:
                          PhoneNumber: []
                  EmailList:
                    Email:
                      - Type: PRIM
                        Address: stuart@gmail.com
                  LocationList:
                    Location:
                      - Description: Only Campus
                        Address:
                          Type: RU
                          Role: PHY
                          Line1: 1175 Lake Ferry Rd
                          Suburb: RD 1
                          City: Martinborough
                          PostalCode: "5781"
                        GridLocation:
                          Latitude: -41.2814719
                          Longitude: 175.3458472
                        StatisticalAreaList:
                          StatisticalArea:
                            - SpatialUnitType: GE
                              Code: "058"
                            - SpatialUnitType: TA
                              Code: "050"
                            - SpatialUnitType: WA
                              Code: "05003"
                  PhoneNumberList:
                    PhoneNumber:
                      - Notes: Attendance Office (Automated)
                        Usage: SMS
                        Type: WTE
                        Number: (0274) 300 9991
                      - Notes: Attendance Office
                        Usage: INT
                        Type: WTE
                        Number: (04) 300 9992
                      - Notes: School Secretary DDI
                        Type: WTE
                        Number: (04) 300 9993
                  SchoolService:
                    CoEdStatus: COED
                    Decile: 5
                    NewEntrantPolicyList:
                      EnactedPolicy:
                        - EffectiveTo: 2018-12-31
                          Policy: AE
                        - EffectiveFrom: 2019-01-01
                          Policy: CE
                    SchoolYearList:
                      SchoolYear:
                        - YearLevel: 1
                          FIRSTSchoolYearGenderId: 1001
                          Gender: C
                        - YearLevel: 2
                          FIRSTSchoolYearGenderId: 1002
                          Gender: C
                        - YearLevel: 3
                          FIRSTSchoolYearGenderId: 1003
                          Gender: C
                        - YearLevel: 4
                          FIRSTSchoolYearGenderId: 1004
                          Gender: C
                        - YearLevel: 5
                          FIRSTSchoolYearGenderId: 1005
                          Gender: C
                        - YearLevel: 6
                          FIRSTSchoolYearGenderId: 1006
                          Gender: C
                        - YearLevel: 7
                          FIRSTSchoolYearGenderId: 1007
                          Gender: C
                        - YearLevel: 8
                          FIRSTSchoolYearGenderId: 1008
                          Gender: C
                        - YearLevel: 9
                          FIRSTSchoolYearGenderId: 1009
                          Gender: F
                        - YearLevel: 10
                          FIRSTSchoolYearGenderId: 1010
                          Gender: F
                        - YearLevel: 11
                          FIRSTSchoolYearGenderId: 1011
                          Gender: F
                        - YearLevel: 12
                          FIRSTSchoolYearGenderId: 1012
                          Gender: F
                        - YearLevel: 13
                          FIRSTSchoolYearGenderId: 1013
                          Gender: F
            application/xml:
              schema:
                type: object
                properties:
                  Organisation:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example: |-
                <Organisation>
                  <AddressList/>
                  <CommunicationChannelList/>
                  <ContactList>
                    <Contact>
                      <Name>
                        <FamilyName>Dumbledore</FamilyName>
                        <GivenName>Albus</GivenName>
                        <FullName>Albus Dumbledore</FullName>
                      </Name>
                      <PositionTitle>Lead School Headmaster</PositionTitle>
                      <Role>PRI</Role>
                      <AddressList>
                        <Address>
                          <Type>TH</Type>
                          <Role>PHY</Role>
                          <Line1>533 Hogwart's Way</Line1>
                          <City>Hogsmead</City>
                          <PostalCode>7733</PostalCode>
                        </Address>
                      </AddressList>
                      <EmailList/>
                      <PhoneNumberList/>
                    </Contact>
                  </ContactList>
                  <EmailList>
                    <Email>
                      <Type>PRIM</Type>
                      <Address>hogwarts@mailinator.com</Address>
                    </Email>
                  </EmailList>
                  <LocationList/>
                  <Name>Masterton (Whakaoriori) KƒÅhui Ako</Name>
                  <PhoneNumberList>
                    <PhoneNumber>
                      <Notes>Lead School Secretary (Mobile)</Notes>
                      <Type>MOB</Type>
                      <Number>(021) 300 999</Number>
                    </PhoneNumber>
                  </PhoneNumberList>
                  <Type>998</Type>
                  <OrganisationRefId>922</OrganisationRefId>
                  <OrganisationLocalId>99204</OrganisationLocalId>
                </Organisation>
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - Organisation
        - OrganisationSingle
      summary: Update a single Organisation
      description: "Update a particular Organisation, which represents a single recognised
        Education Provider entity (ECEs, Schools & Tertiary  Education
        Institutions), Community (KƒÅhui Ako, Learning Support Clusters, etc.),
        or others unit(Teen Parent Units, Activity Centres. etc.)    "
      operationId: updateOrganisation
      security:
        - sifDataObject:
            - FIRST
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider(or
            other Organisation); being worked on.</p>
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
      requestBody:
        description: CRUD operation on Organisation
        content:
          application/json:
            schema:
              type: object
              properties:
                Organisation:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/get/responses/\
                200/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                Organisation:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/get/responses/\
                200/content/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated object
          content:
            application/json:
              schema:
                type: object
                properties:
                  Organisation:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/get/response\
                  s/200/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Organisation:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/get/response\
                  s/200/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Failed to update object.
          content:
            application/json:
              schema:
                type: object
                title: error
                required:
                  - error
                  - when
                  - errorstr
                additionalProperties: false
                properties:
                  error:
                    type: integer
                    description: Edsby defined error code
                  when:
                    type: string
                    format: date-time
                    description: Date and Time of when the HTTP request was processed.
                  errorstr:
                    type: string
                    description: Narrative text describing the error
                  refId:
                    type: string
                    description: Data object refId of the object being created/updated
                  localId:
                    type: string
                    description: Data object localId of the object being created/updated
              example:
                error: 1009
                when: 2020-07-16T20:00:46.000Z
                errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required field
                  PersonInfo-Name-FamilyName (LastName) 'None'"
                localId: ST-002
            application/xml:
              schema:
                type: object
                title: error
                required:
                  - error
                  - when
                  - errorstr
                additionalProperties: false
                properties:
                  error:
                    type: integer
                    description: Edsby defined error code
                  when:
                    type: string
                    format: date-time
                    description: Date and Time of when the HTTP request was processed.
                  errorstr:
                    type: string
                    description: Narrative text describing the error
                  refId:
                    type: string
                    description: Data object refId of the object being created/updated
                  localId:
                    type: string
                    description: Data object localId of the object being created/updated
              example: >-
                <Error>
                  <error>1009</error>
                  <when>2020-07-16T20:00:46.000Z</when>
                  <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                  <localId>ST-002</localId>
                </Error>
    patch:
      tags:
        - Organisation
        - OrganisationSingle
      summary: Patch a single Organisation
      description: Update one or more fields of a particular Organisation, which represents
        a single recognised Education Provider entity (ECEs, Schools &
        Tertiary  Education Institutions), Community (KƒÅhui Ako, Learning
        Support Clusters, etc.), or others unit(Teen Parent Units, Activity
        Centres. etc.)
      operationId: patchOrganisation
      security:
        - sifDataObject:
            - FIRST
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider(or
            other Organisation); being worked on.</p>
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
      requestBody:
        description: CRUD operation on Organisation
        content:
          application/json:
            schema:
              type: object
              properties:
                Organisation:
                  $ref: jsonSchema.NZ.update.yaml#/properties/Organisation
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/get/responses/\
                200/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                Organisation:
                  $ref: jsonSchema.NZ.update.yaml#/properties/Organisation
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/get/responses/\
                200/content/application~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched object
          content:
            application/json:
              schema:
                type: object
                properties:
                  Organisation:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/get/response\
                  s/200/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Organisation:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Organisation
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/get/response\
                  s/200/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Failed to patch object.
          content:
            application/json:
              schema:
                type: object
                title: error
                required:
                  - error
                  - when
                  - errorstr
                additionalProperties: false
                properties:
                  error:
                    type: integer
                    description: Edsby defined error code
                  when:
                    type: string
                    format: date-time
                    description: Date and Time of when the HTTP request was processed.
                  errorstr:
                    type: string
                    description: Narrative text describing the error
                  refId:
                    type: string
                    description: Data object refId of the object being created/updated
                  localId:
                    type: string
                    description: Data object localId of the object being created/updated
              example:
                error: 1009
                when: 2020-07-16T20:00:46.000Z
                errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required field
                  PersonInfo-Name-FamilyName (LastName) 'None'"
                localId: ST-002
            application/xml:
              schema:
                type: object
                title: error
                required:
                  - error
                  - when
                  - errorstr
                additionalProperties: false
                properties:
                  error:
                    type: integer
                    description: Edsby defined error code
                  when:
                    type: string
                    format: date-time
                    description: Date and Time of when the HTTP request was processed.
                  errorstr:
                    type: string
                    description: Narrative text describing the error
                  refId:
                    type: string
                    description: Data object refId of the object being created/updated
                  localId:
                    type: string
                    description: Data object localId of the object being created/updated
              example: >-
                <Error>
                  <error>1009</error>
                  <when>2020-07-16T20:00:46.000Z</when>
                  <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                  <localId>ST-002</localId>
                </Error>
  "/organisation/{OrganisationRefId}/organisationrelationship":
    post:
      tags:
        - OrganisationRelationship
        - OrganisationRelationshipBulk
      summary: Create one or more OrganisationRelationships
      description: Bulk operation to create one or more OrganisationRelationships, each of
        which represents  a single recognised relationship between two education
        Organisations. The two organisations are referred to as the Source
        Organisation and the Related Organisation.</p> <p>RelationshipType
        records the nature of the relationship between the two
        organisations,  and gives guidance on which is the Source Organisation
        and which is the Related Organisation.</p>
      operationId: createOrganisationRelationships
      security:
        - sifDataObject:
            - FIRST
      parameters:
        - $ref: "#/paths/~1organisation/post/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider (or
            other Organisation) that must be either the <strong>source</strong>
            or <strong>related</strong> Organisation of the organisation
            relationships.
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
          example: "9651"
      requestBody:
        description: CRUD operation on OrganisationRelationship
        content:
          application/json:
            schema:
              type: object
              properties:
                OrganisationRelationships:
                  $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
            example:
              OrganisationRelationships:
                OrganisationRelationship:
                  - OrganisationRelationshipLocalId: 90100_8001
                    Status: A
                    RelationshipType: "34037"
                    SourceOrganisation:
                      RefId: "90100"
                    SourceOrganisationRole: LSC
                    SourceOrganisationAgreementDate: 2020-01-15
                    RelatedOrganisation:
                      RefId: "8001"
                    RelatedOrganisationRole: "184000"
                    RelatedOrganisationAgreementDate: 2020-01-15
                    EffectiveDate: 2020-01-15
          application/xml:
            schema:
              type: object
              properties:
                OrganisationRelationships:
                  $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
            example: >-
              <OrganisationRelationships>
                <OrganisationRelationship>
                  <OrganisationRelationshipLocalId>90100_8001</OrganisationRelationshipLocalId>
                  <Status>A</Status>
                  <RelationshipType>34037</RelationshipType>
                  <SourceOrganisation>
                    <RefId>90100</RefId>
                  </SourceOrganisation>
                  <SourceOrganisationRole>LSC</SourceOrganisationRole>
                  <SourceOrganisationAgreementDate>2020-01-15</SourceOrganisationAgreementDate>
                  <RelatedOrganisation>
                    <RefId>8001</RefId>
                  </RelatedOrganisation>
                  <RelatedOrganisationRole>184000</RelatedOrganisationRole>
                  <RelatedOrganisationAgreementDate>2020-01-15</RelatedOrganisationAggreementDate>
                  <EffectiveDate>2020-01-15</EffectiveDate>
                </OrganisationRelationship>
                <OrganisationRelationship>
                  <OrganisationRelationshipLocalId>90100_8002</OrganisationRelationshipLocalId>
                  <Status>A</Status>
                  <RelationshipType>34037</RelationshipType>
                  <SourceOrganisation>
                    <RefId>90100</RefId>
                  </SourceOrganisation>
                  <SourceOrganisationRole>LSC</SourceOrganisationRole>
                  <SourceOrganisationAgreementDate>2020-01-15</SourceOrganisationAgreementDate>
                  <RelatedOrganisation>
                    <RefId>8002</RefId>
                  </RelatedOrganisation>
                  <RelatedOrganisationRole>184000</RelatedOrganisationRole>
                  <RelatedOrganisationAgreementDate>2020-01-16</RelatedOrganisationAggreementDate>
                  <EffectiveDate>2020-01-16</EffectiveDate>
                </OrganisationRelationship>
              </OrganisationRelationships>
      responses:
        "200":
          description: Create successful; returns created objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  OrganisationRelationships:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/requestBody/content/application~1json/exam\
                  ple"
            application/xml:
              schema:
                type: object
                properties:
                  OrganisationRelationships:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/requestBody/content/application~1xml/examp\
                  le"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects created, some creates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: OrganisationRelationship
                      properties:
                        OrganisationRelationship:
                          $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                - OrganisationRelationship:
                    OrganisationRelationshipLocalId: 90100_8001
                    Status: A
                    RelationshipType: "34037"
                    SourceOrganisation:
                      RefId: "90100"
                    SourceOrganisationRole: LSC
                    SourceOrganisationAgreementDate: 2020-01-15
                    RelatedOrganisation:
                      RefId: "8001"
                    RelatedOrganisationRole: "184000"
                    RelatedOrganisationAgreementDate: 2020-01-15
                    EffectiveDate: 2020-01-15
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: OrganisationRelationship
                          properties:
                            OrganisationRelationship:
                              $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example: >-
                <Response>
                  <OrganisationRelationship>
                    <OrganisationRelationshipLocalId>90100_8001</OrganisationRelationshipLocalId>
                    <Status>A</Status>
                    <RelationshipType>34037</RelationshipType>
                    <SourceOrganisation>
                      <RefId>90100</RefId>
                    </SourceOrganisation>
                    <SourceOrganisationRole>LSC</SourceOrganisationRole>
                    <SourceOrganisationAgreementDate>2020-01-15</SourceOrganisationAgreementDate>
                    <RelatedOrganisation>
                      <RefId>8001</RefId>
                    </RelatedOrganisation>
                    <RelatedOrganisationRole>184000</RelatedOrganisationRole>
                    <RelatedOrganisationAgreementDate>2020-01-15</RelatedOrganisationAggreementDate>
                    <EffectiveDate>2020-01-15</EffectiveDate>
                  </OrganisationRelationship>
                  <Error>
                    <error>1009</error>
                    <when>2020-07-16T20:00:46.000Z</when>
                    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                    <localId>ST-002</localId>
                    <refId/>
                  </Error>      
                </Response>
    get:
      tags:
        - OrganisationRelationship
        - OrganisationRelationshipBulk
      summary: Get a list of OrganisationRelationships
      description: Bulk operation to retrieve all available OrganisationRelationships where
        the given OrganisationRelationshipRefId represents either the
        <strong>Source</strong> or <strong>Related</strong> organisation in the
        OrganisationRelationship.</p> <p> Each OrganisationRelationship
        represents a single recognised relationship between two education
        Organisations. The two organisations are referred to as the
        Source  Organisation and the Related Organisation.</p>
        <p>RelationshipType records the nature of the relationship between the
        two organisations,  and gives guidance on which is the Source
        Organisation and which is the Related Organisation.</p>
      operationId: getOrganisationRelationships
      security:
        - sifDataObject:
            - SMS
            - FIRST
            - SUPS
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - name: start
          in: query
          description: Include only items from start date;	`start=2017-08-01`
          required: false
          schema:
            type: string
            format: date
          example: 2017-08-01
        - name: end
          in: query
          description: Include only items before end date;	`end=2017-08-31`
          required: false
          schema:
            type: string
            format: date
          example: 2018-08-31
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider (or
            other Organisation) that must be either the <strong>source</strong>
            or <strong>related</strong> Organisation of the organisation
            relationships.
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
          example: "9651"
        - name: status
          in: query
          description: Filter the results; based upon the value of the Status field
          required: false
          schema:
            type: string
            oneOf:
              - enum:
                  - A
                title: Active
                description: Queried object is Active
              - enum:
                  - I
                title: Inactive
                description: Queried object is
          example: A
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  OrganisationRelationships:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/requestBody/content/application~1json/exam\
                  ple"
            application/xml:
              schema:
                type: object
                properties:
                  OrganisationRelationships:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/requestBody/content/application~1xml/examp\
                  le"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - OrganisationRelationship
        - OrganisationRelationshipBulk
      summary: Update a list of OrganisationRelationships
      description: >-
        Bulk operation to update a set of OrganisationRelationships, each of
        which represents a  single recognised relationship between two education
        Organisations. The two organisations
         are referred to as the Source Organisation and the Related Organisation.</p>
        <p>RelationshipType records the nature of the relationship between the two organisations,  and gives guidance on which is the Source Organisation and which is the Related Organisation.</p>
      operationId: updateOrganisationRelationships
      security:
        - sifDataObject:
            - FIRST
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider (or
            other Organisation) that must be either the <strong>source</strong>
            or <strong>related</strong> Organisation of the organisation
            relationships.
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
          example: "9651"
      requestBody:
        description: CRUD operation on OrganisationRelationship
        content:
          application/json:
            schema:
              type: object
              properties:
                OrganisationRelationships:
                  $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationr\
                elationship/post/requestBody/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                OrganisationRelationships:
                  $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationr\
                elationship/post/requestBody/content/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  OrganisationRelationships:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/requestBody/content/application~1json/exam\
                  ple"
            application/xml:
              schema:
                type: object
                properties:
                  OrganisationRelationships:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/requestBody/content/application~1xml/examp\
                  le"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects updated, some updates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: OrganisationRelationship
                      properties:
                        OrganisationRelationship:
                          $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/responses/default/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: OrganisationRelationship
                          properties:
                            OrganisationRelationship:
                              $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/responses/default/content/application~1xml\
                  /example"
    patch:
      tags:
        - OrganisationRelationship
        - OrganisationRelationshipBulk
      summary: Patch a list of OrganisationRelationships
      description: Bulk operation to update one or more fields of a set of
        OrganisationRelationships, each of which represents a  single recognised
        relationship between two education Organisations. The two organisations
        are referred to as the Source Organisation and the Related
        Organisation.</p> <p>RelationshipType records the nature of the
        relationship between the two organisations,  and gives guidance on which
        is the Source Organisation and which is the Related Organisation.</p>
      operationId: patchOrganisationRelationships
      security:
        - sifDataObject:
            - FIRST
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider (or
            other Organisation) that must be either the <strong>source</strong>
            or <strong>related</strong> Organisation of the organisation
            relationships.
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
          example: "9651"
      requestBody:
        description: CRUD operation on OrganisationRelationship
        content:
          application/json:
            schema:
              type: object
              properties:
                OrganisationRelationships:
                  $ref: jsonSchema.NZ.update.yaml#/properties/OrganisationRelationships
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationr\
                elationship/post/requestBody/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                OrganisationRelationships:
                  $ref: jsonSchema.NZ.update.yaml#/properties/OrganisationRelationships
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationr\
                elationship/post/requestBody/content/application~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  OrganisationRelationships:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/requestBody/content/application~1json/exam\
                  ple"
            application/xml:
              schema:
                type: object
                properties:
                  OrganisationRelationships:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationships
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/requestBody/content/application~1xml/examp\
                  le"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects patched, some patches failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: OrganisationRelationship
                      properties:
                        OrganisationRelationship:
                          $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/responses/default/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: OrganisationRelationship
                          properties:
                            OrganisationRelationship:
                              $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship/post/responses/default/content/application~1xml\
                  /example"
  "/organisation/{OrganisationRefId}/organisationrelationship/{OrganisationRelationshipRefId}":
    get:
      tags:
        - OrganisationRelationship
        - OrganisationRelationshipSingle
      summary: Get a single OperationRelationship
      description: Retrieve a particular OrganisationRelationship, which represents
        a  single recognised relationship between two education Organisations.
        The two organisations are referred to  as the Source Organisation and
        the Related Organisation.</p> <p>RelationshipType records the nature of
        the relationship between the two organisations,  and gives guidance on
        which is the Source Organisation and which is the Related
        Organisation.</p>
      operationId: getOrganisationRelationship
      security:
        - sifDataObject:
            - SMS
            - FIRST
            - SUPS
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider (or
            other Organisation) that must be either the <strong>source</strong>
            or <strong>related</strong> Organisation of the organisation
            relationships.
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
          example: "9651"
        - name: OrganisationRelationshipRefId
          in: path
          description: <p>The SIF GUID used by systems to identify the
            OrganisationRelationship.</p>
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  OrganisationRelationship:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                OrganisationRelationship:
                  OrganisationRelationshipLocalId: 90100_8001
                  Status: A
                  RelationshipType: "34037"
                  SourceOrganisation:
                    RefId: "90100"
                  SourceOrganisationRole: LSC
                  SourceOrganisationAgreementDate: 2020-01-15
                  RelatedOrganisation:
                    RefId: "8001"
                  RelatedOrganisationRole: "184000"
                  RelatedOrganisationAgreementDate: 2020-01-15
                  EffectiveDate: 2020-01-15
            application/xml:
              schema:
                type: object
                properties:
                  OrganisationRelationship:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example: >-
                <OrganisationRelationship>
                  <OrganisationRelationshipLocalId>90100_8001</OrganisationRelationshipLocalId>
                  <Status>A</Status>
                  <RelationshipType>34037</RelationshipType>
                  <SourceOrganisation>
                    <RefId>90100</RefId>
                  </SourceOrganisation>
                  <SourceOrganisationRole>LSC</SourceOrganisationRole>
                  <SourceOrganisationAgreementDate>2020-01-15</SourceOrganisationAgreementDate>
                  <RelatedOrganisation>
                    <RefId>8001</RefId>
                  </RelatedOrganisation>
                  <RelatedOrganisationRole>184000</RelatedOrganisationRole>
                  <RelatedOrganisationAgreementDate>2020-01-15</RelatedOrganisationAggreementDate>
                  <EffectiveDate>2020-01-15</EffectiveDate>
                </OrganisationRelationship>
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - OrganisationRelationship
        - OrganisationRelationshipSingle
      summary: Update a single OperationRelationship
      description: Update a particular OrganisationRelationship, which represents a  single
        recognised relationship between two education Organisations. The two
        organisations are referred to  as the Source Organisation and the
        Related Organisation.</p> <p>RelationshipType records the nature of the
        relationship between the two organisations,  and gives guidance on which
        is the Source Organisation and which is the Related Organisation.</p>
      security:
        - sifDataObject:
            - FIRST
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider (or
            other Organisation) that must be either the <strong>source</strong>
            or <strong>related</strong> Organisation of the organisation
            relationships.
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
          example: "9651"
        - name: OrganisationRelationshipRefId
          in: path
          description: <p>The SIF GUID used by systems to identify the
            OrganisationRelationship.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on OrganisationRelationship
        content:
          application/json:
            schema:
              type: object
              properties:
                OrganisationRelationship:
                  $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationr\
                elationship~1%7BOrganisationRelationshipRefId%7D/get/responses/\
                200/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                OrganisationRelationship:
                  $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationr\
                elationship~1%7BOrganisationRelationshipRefId%7D/get/responses/\
                200/content/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated object
          content:
            application/json:
              schema:
                type: object
                properties:
                  OrganisationRelationship:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship~1%7BOrganisationRelationshipRefId%7D/get/respon\
                  ses/200/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  OrganisationRelationship:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship~1%7BOrganisationRelationshipRefId%7D/get/respon\
                  ses/200/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/put/responses/defa\
            ult"
    patch:
      tags:
        - OrganisationRelationship
        - OrganisationRelationshipSingle
      summary: Patch a single OperationRelationship
      description: Update one or more fields of a particular OrganisationRelationship,
        which represents a  single recognised relationship between two education
        Organisations. The two organisations are referred to as the Source
        Organisation and the Related Organisation.</p> <p>RelationshipType
        records the nature of the relationship between the two
        organisations,  and gives guidance on which is the Source Organisation
        and which is the Related Organisation.</p>
      operationId: patchOrganisationRelationship
      security:
        - sifDataObject:
            - FIRST
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: OrganisationRefId
          in: path
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider (or
            other Organisation) that must be either the <strong>source</strong>
            or <strong>related</strong> Organisation of the organisation
            relationships.
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
          example: "9651"
        - name: OrganisationRelationshipRefId
          in: path
          description: <p>The SIF GUID used by systems to identify the
            OrganisationRelationship.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on OrganisationRelationship
        content:
          application/json:
            schema:
              type: object
              properties:
                OrganisationRelationship:
                  $ref: jsonSchema.NZ.update.yaml#/properties/OrganisationRelationship
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationr\
                elationship~1%7BOrganisationRelationshipRefId%7D/get/responses/\
                200/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                OrganisationRelationship:
                  $ref: jsonSchema.NZ.update.yaml#/properties/OrganisationRelationship
            example:
              $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationr\
                elationship~1%7BOrganisationRelationshipRefId%7D/get/responses/\
                200/content/application~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched object
          content:
            application/json:
              schema:
                type: object
                properties:
                  OrganisationRelationship:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship~1%7BOrganisationRelationshipRefId%7D/get/respon\
                  ses/200/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  OrganisationRelationship:
                    $ref: jsonSchema.NZ.create.yaml#/properties/OrganisationRelationship
              example:
                $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisatio\
                  nrelationship~1%7BOrganisationRelationshipRefId%7D/get/respon\
                  ses/200/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/patch/responses/de\
            fault"
  /staffpersonal:
    post:
      tags:
        - StaffPersonal
        - StaffPersonalBulk
      summary: Create one or more StaffPersonals
      description: <p>Bulk operation to create one or more StaffPersonal records of the
        personal contact and demographic information relating to a single staff
        member, who might be a teacher or other employee of the given
        Provider.</p>
      operationId: createStaffPersonals
      parameters:
        - $ref: "#/paths/~1organisation/post/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/6"
        - name: X-Edsby-OrganisationRefId
          in: header
          required: true
          description: <p>The Ministry of Education Organisation Id of the Provider(or
            other Organisation); used to limit the scope of the API endpoint to
            a particular MoE Organisation.</p>
          schema:
            type: string
            pattern: ^[1-9][0-9]{0,4}$
          example: "9651"
      security:
        - sifDataObject:
            - SUPS
            - SMS
      requestBody:
        description: CRUD operation on StaffPersonal
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffPersonals:
                  type: object
                  properties:
                    StaffPersonal:
                      type: array
                      items:
                        allOf:
                          - $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonalBase
                          - required:
                              - StaffAssignment
                            properties:
                              StaffAssignment:
                                type: object
                                description: >-
                                  <p>Partial <a
                                  href="#tag/StaffAssignment">StaffAssignment</a>
                                  object, 

                                  denoting initial role, at the given Organisation for the StaffPersonal upon creation.</p>
                                required:
                                  - StaffRole
                                  - StartDate
                                additionalProperties: false
                                properties:
                                  StaffRole:
                                    $ref: jsonSchema.NZ.create.yaml#/definitions/NZCodeSetsStaffRole
                                  StartDate:
                                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment/properties/StartDate
                                  EndDate:
                                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment/properties/EndDate
            example:
              StaffPersonals:
                StaffPersonal:
                  - StaffPersonalRefId: d3e34f41-9d75-101a-8c3d-00aa001a1652
                    StaffPersonalLocalId: ST-001
                    PersonInfo:
                      Name:
                        FamilyName: Smith
                        GivenName: Fred
                        FullName: Fred Smith
                        IsVerified: N
                      Demographics:
                        BirthDate: 1966-05-01
                      EmailList:
                        Email:
                          - Type: PRIM
                            Address: freddy@mailinator.com
                    StaffAssignment:
                      StaffRole: "1002"
                      StartDate: 2020-09-03
          application/xml:
            schema:
              type: object
              properties:
                StaffPersonals:
                  type: object
                  properties:
                    StaffPersonal:
                      type: array
                      items:
                        allOf:
                          - $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonalBase
                          - required:
                              - StaffAssignment
                            properties:
                              StaffAssignment:
                                type: object
                                description: >-
                                  <p>Partial <a
                                  href="#tag/StaffAssignment">StaffAssignment</a>
                                  object, 

                                  denoting initial role, at the given Organisation for the StaffPersonal upon creation.</p>
                                required:
                                  - StaffRole
                                  - StartDate
                                additionalProperties: false
                                properties:
                                  StaffRole:
                                    $ref: jsonSchema.NZ.create.yaml#/definitions/NZCodeSetsStaffRole
                                  StartDate:
                                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment/properties/StartDate
                                  EndDate:
                                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment/properties/EndDate
            example: >-
              <StaffPersonals>
                <StaffPersonal>
                  <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001a1652</StaffPersonalRefId>
                  <StaffPersonalLocalId>ST-001</StaffPersonalLocalId>
                  <PersonInfo>
                    <Name>
                      <FamilyName>Smith</FamilyName>
                      <GivenName>Fred</GivenName>
                      <FullName>Fred Smith</FullName>
                      <IsVerified>N</IsVerified>
                    </Name>
                    <Demographics>
                      <BirthDate>1966-05-01</BirthDate>
                    </Demographics>          
                    <EmailList>
                      <Email>
                        <Type>PRIM</Type>
                        <Address>freddy@gmail.com</Address>
                      </Email>
                    </EmailList>
                  </PersonInfo>
                  <StaffAssignment>
                    <StaffRole>1002</StaffRole>
                    <StartDate>2020-09-03</StartDate>
                  </StaffAssignment>
                </StaffPersonal>
                <StaffPersonal>
                  <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001b3652</StaffPersonalRefId>
                  <StaffPersonalLocalId>ST-002</StaffPersonalLocalId>
                  <PersonInfo>
                    <Name>
                      <FullName>Fred Jones</FullName>
                      <IsVerified>N</IsVerified>
                    </Name>
                    <Demographics>
                      <BirthDate>1966-05-01</BirthDate>
                    </Demographics>          
                    <EmailList>
                      <Email>
                        <Type>PRIM</Type>
                        <Address>fredJ@gmail.com</Address>
                      </Email>
                    </EmailList>
                  </PersonInfo>
                  <StaffAssignment>
                    <StaffRole>1002</StaffRole>
                    <StartDate>2020-09-03</StartDate>
                  </StaffAssignment>
                </StaffPersonal>      
              </StaffPersonals>
      responses:
        "200":
          description: Create successful; returns created objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffPersonals:
                    type: object
                    properties:
                      StaffPersonal:
                        type: array
                        items:
                          allOf:
                            - $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonalBase
                            - required:
                                - StaffAssignment
                              properties:
                                StaffAssignment:
                                  type: object
                                  description: >-
                                    <p>Partial <a
                                    href="#tag/StaffAssignment">StaffAssignment</a>
                                    object, 

                                    denoting initial role, at the given Organisation for the StaffPersonal upon creation.</p>
                                  required:
                                    - StaffRole
                                    - StartDate
                                  additionalProperties: false
                                  properties:
                                    StaffRole:
                                      $ref: jsonSchema.NZ.create.yaml#/definitions/NZCodeSetsStaffRole
                                    StartDate:
                                      $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment/properties/StartDate
                                    EndDate:
                                      $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment/properties/EndDate
              example:
                $ref: "#/paths/~1staffpersonal/post/requestBody/content/application\
                  ~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffPersonals:
                    type: object
                    properties:
                      StaffPersonal:
                        type: array
                        items:
                          allOf:
                            - $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonalBase
                            - required:
                                - StaffAssignment
                              properties:
                                StaffAssignment:
                                  type: object
                                  description: >-
                                    <p>Partial <a
                                    href="#tag/StaffAssignment">StaffAssignment</a>
                                    object, 

                                    denoting initial role, at the given Organisation for the StaffPersonal upon creation.</p>
                                  required:
                                    - StaffRole
                                    - StartDate
                                  additionalProperties: false
                                  properties:
                                    StaffRole:
                                      $ref: jsonSchema.NZ.create.yaml#/definitions/NZCodeSetsStaffRole
                                    StartDate:
                                      $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment/properties/StartDate
                                    EndDate:
                                      $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment/properties/EndDate
              example:
                $ref: "#/paths/~1staffpersonal/post/requestBody/content/application\
                  ~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects created, some creates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: StaffPersonal
                      properties:
                        StaffPersonal:
                          $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                - StaffPersonal:
                    - StaffPersonalRefId: d3e34f41-9d75-101a-8c3d-00aa001a1652
                      StaffPersonalLocalId: ST-001
                      PersonInfo:
                        Name:
                          FamilyName: Smith
                          GivenName: Fred
                          FullName: Fred Smith
                          IsVerified: N
                        Demographics:
                          BirthDate: 1966-05-01
                        EmailList:
                          Email:
                            - Type: PRIM
                              Address: freddy@mailinator.com
                      StaffAssignment:
                        StaffRole: "1002"
                        StartDate: 2020-09-03
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: StaffPersonal
                          properties:
                            StaffPersonal:
                              $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example: >-
                <Response>
                  <StaffPersonal>
                    <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001a1652</StaffPersonalRefId>
                    <StaffPersonalLocalId>ST-001</StaffPersonalLocalId>
                    <PersonInfo>
                      <Name>
                        <FamilyName>Smith</FamilyName>
                        <GivenName>Fred</GivenName>
                        <FullName>Fred Smith</FullName>
                        <IsVerified>N</IsVerified>
                      </Name>
                      <Demographics>
                        <BirthDate>1966-05-01</BirthDate>
                      </Demographics>
                      <EmailList>
                        <Email>
                          <Type>PRIM</Type>
                          <Address>freddy@gmail.com</Address>
                        </Email>
                      </EmailList>
                    </PersonInfo>
                  </StaffPersonal>
                  <Error>
                    <error>1009</error>
                    <when>2020-07-16T20:00:46.000Z</when>
                    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                    <localId>ST-002</localId>
                    <refId/>
                  </Error>
                </Response>
    get:
      tags:
        - StaffPersonal
        - StaffPersonalBulk
      summary: Retrieve one or more StaffPersonals
      description: <p>Bulk operation to retrieve all available StaffPersonal records of the
        personal contact and demographic information relating to a single staff
        member, who might be a teacher or other  employee of the given
        Provider.</p>
      operationId: getStaffPersonals
      security:
        - sifDataObject:
            - SUPS
            - SMS
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffPersonals:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonals
              example:
                StaffPersonals:
                  StaffPersonal:
                    - StaffPersonalRefId: d3e34f41-9d75-101a-8c3d-00aa001a1652
                      StaffPersonalLocalId: ST-001
                      PersonInfo:
                        Name:
                          FamilyName: Smith
                          GivenName: Fred
                          FullName: Fred Smith
                          IsVerified: N
                        Demographics:
                          BirthDate: 1966-05-01
                        EmailList:
                          Email:
                            - Type: PRIM
                              Address: freddy@mailinator.com
            application/xml:
              schema:
                type: object
                properties:
                  StaffPersonals:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonals
              example: >-
                <StaffPersonals>
                  <StaffPersonal>
                    <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001a1652</StaffPersonalRefId>
                    <StaffPersonalLocalId>ST-001</StaffPersonalLocalId>
                    <PersonInfo>
                      <Name>
                        <FamilyName>Smith</FamilyName>
                        <GivenName>Fred</GivenName>
                        <FullName>Fred Smith</FullName>
                        <IsVerified>N</IsVerified>
                      </Name>
                      <Demographics>
                        <BirthDate>1966-05-01</BirthDate>
                      </Demographics>          
                      <EmailList>
                        <Email>
                          <Type>PRIM</Type>
                          <Address>freddy@gmail.com</Address>
                        </Email>
                      </EmailList>
                    </PersonInfo>
                  </StaffPersonal>
                  <StaffPersonal>
                    <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001b3652</StaffPersonalRefId>
                    <StaffPersonalLocalId>ST-002</StaffPersonalLocalId>
                    <PersonInfo>
                      <Name>
                        <FullName>Fred Jones</FullName>
                        <IsVerified>N</IsVerified>
                      </Name>
                      <Demographics>
                        <BirthDate>1966-05-01</BirthDate>
                      </Demographics>          
                      <EmailList>
                        <Email>
                          <Type>PRIM</Type>
                          <Address>fredJ@gmail.com</Address>
                        </Email>
                      </EmailList>
                    </PersonInfo>
                  </StaffPersonal>      
                </StaffPersonals>
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - StaffPersonal
        - StaffPersonalBulk
      summary: Update one or more StaffPersonals
      description: <p>Bulk operation to update one or more StaffPeraonal records of the
        personal contact and  demographic information relating to a single staff
        member, who might be a teacher or other employee of the given
        Provider.</p>
      operationId: updateStaffPersonals
      security:
        - sifDataObject:
            - SUPS
            - SMS
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on StaffPersonal
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffPersonals:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonals
            example:
              $ref: "#/paths/~1staffpersonal/get/responses/200/content/application~\
                1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StaffPersonals:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonals
            example:
              $ref: "#/paths/~1staffpersonal/get/responses/200/content/application~\
                1xml/example"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffPersonals:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonals
              example:
                $ref: "#/paths/~1staffpersonal/get/responses/200/content/applicatio\
                  n~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffPersonals:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonals
              example:
                $ref: "#/paths/~1staffpersonal/get/responses/200/content/applicatio\
                  n~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects updated, some updates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: StaffPersonal
                      properties:
                        StaffPersonal:
                          $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                - StaffPersonal:
                    StaffPersonalRefId: d3e34f41-9d75-101a-8c3d-00aa001a1652
                    StaffPersonalLocalId: ST-001
                    PersonInfo:
                      Name:
                        FamilyName: Smith
                        GivenName: Fred
                        FullName: Fred Smith
                        IsVerified: N
                      Demographics:
                        BirthDate: 1966-05-01
                      EmailList:
                        Email:
                          - Type: PRIM
                            Address: freddy@mailinator.com
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: StaffPersonal
                          properties:
                            StaffPersonal:
                              $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                $ref: "#/paths/~1staffpersonal/post/responses/default/content/appli\
                  cation~1xml/example"
    patch:
      tags:
        - StaffPersonal
        - StaffPersonalBulk
      summary: Patch one or more StaffPersonals
      description: <p>Bulk operation to update one or more fields of one or more
        StaffPersonal records of the personal contact and demographic
        information relating to a single staff member, who might be a teacher or
        other employee of the given Provider.</p>
      operationId: patchStaffPersonals
      security:
        - sifDataObject:
            - SUPS
            - SMS
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on StaffPersonal
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffPersonals:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StaffPersonals
            example:
              $ref: "#/paths/~1staffpersonal/get/responses/200/content/application~\
                1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StaffPersonals:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StaffPersonals
            example:
              $ref: "#/paths/~1staffpersonal/get/responses/200/content/application~\
                1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffPersonals:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonals
              example:
                $ref: "#/paths/~1staffpersonal/get/responses/200/content/applicatio\
                  n~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffPersonals:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonals
              example:
                $ref: "#/paths/~1staffpersonal/get/responses/200/content/applicatio\
                  n~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects patched, some patches failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: StaffPersonal
                      properties:
                        StaffPersonal:
                          $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                $ref: "#/paths/~1staffpersonal/put/responses/default/content/applic\
                  ation~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: StaffPersonal
                          properties:
                            StaffPersonal:
                              $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                $ref: "#/paths/~1staffpersonal/post/responses/default/content/appli\
                  cation~1xml/example"
  "/staffpersonal/{StaffPersonalRefId}":
    get:
      tags:
        - StaffPersonal
        - StaffPersonalSingle
      summary: Retrieve a single StaffPersonal
      description: Retrieve a single record of the personal contact and demographic
        information relating to a single staff member, who might be a teacher or
        other employee of the given Provider.</p>
      operationId: getStaffPersonal
      security:
        - sifDataObject:
            - SUPS
            - SMS
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: StaffPersonalRefId
          in: path
          description: <p>Unique identifier (GUID) that uniquely identifies the particular
            StaffPersonal record of the personal contact and demographic
            information relating to a single  staff member, who might be a
            teacher or other employee of a Provider.</p>
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffPersonal:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                StaffPersonal:
                  StaffPersonalRefId: d3e34f41-9d75-101a-8c3d-00aa001a1652
                  StaffPersonalLocalId: ST-001
                  PersonInfo:
                    Name:
                      FamilyName: Smith
                      GivenName: Fred
                      FullName: Fred Smith
                      IsVerified: N
                    Demographics:
                      BirthDate: 1966-05-01
                    EmailList:
                      Email:
                        - Type: PRIM
                          Address: freddy@mailinator.com
            application/xml:
              schema:
                type: object
                properties:
                  StaffPersonal:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example: >-
                <StaffPersonal>
                  <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001a1652</StaffPersonalRefId>
                  <StaffPersonalLocalId>ST-001</StaffPersonalLocalId>
                  <PersonInfo>
                    <Name>
                      <FamilyName>Smith</FamilyName>
                      <GivenName>Fred</GivenName>
                      <FullName>Fred Smith</FullName>
                      <IsVerified>N</IsVerified>
                    </Name>
                    <Demographics>
                      <BirthDate>1966-05-01</BirthDate>
                    </Demographics>
                    <EmailList>
                      <Email>
                        <Type>PRIM</Type>
                        <Address>freddy@gmail.com</Address>
                      </Email>
                    </EmailList>
                  </PersonInfo>
                </StaffPersonal>
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - StaffPersonal
        - StaffPersonalSingle
      summary: Update a single StaffPersonal
      description: Update a single record of the personal contact and demographic
        information relating to a single staff member, who might be a teacher or
        other employee of the given Provider.</p>
      security:
        - sifDataObject:
            - SUPS
            - SMS
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: StaffPersonalRefId
          in: path
          description: <p>Unique identifier (GUID) that uniquely identifies the particular
            StaffPersonal record of the personal contact and demographic
            information relating to a single  staff member, who might be a
            teacher or other employee of a Provider.</p>
          required: true
          schema:
            type: string
      operationId: updateStaffPersonal
      requestBody:
        description: CRUD operation on StaffPersonal
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffPersonal:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
            example:
              $ref: "#/paths/~1staffpersonal~1%7BStaffPersonalRefId%7D/get/response\
                s/200/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StaffPersonal:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
            example:
              $ref: "#/paths/~1staffpersonal~1%7BStaffPersonalRefId%7D/get/response\
                s/200/content/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated object
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffPersonal:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                $ref: "#/paths/~1staffpersonal~1%7BStaffPersonalRefId%7D/get/respon\
                  ses/200/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffPersonal:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                $ref: "#/paths/~1staffpersonal~1%7BStaffPersonalRefId%7D/get/respon\
                  ses/200/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/put/responses/defa\
            ult"
    patch:
      tags:
        - StaffPersonal
        - StaffPersonalSingle
      summary: Patch a single StaffPersonal
      description: Update one or more fields of asingle record of the personal contact and
        demographic information relating to a single staff member, who might be
        a teacher or other employee of the given Provider.</p>
      operationId: patchStaffPersonal
      security:
        - sifDataObject:
            - SUPS
            - SMS
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: StaffPersonalRefId
          in: path
          description: <p>Unique identifier (GUID) that uniquely identifies the particular
            StaffPersonal record of the personal contact and demographic
            information relating to a single  staff member, who might be a
            teacher or other employee of a Provider.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on StaffPersonal
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffPersonal:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StaffPersonal
            example:
              $ref: "#/paths/~1staffpersonal~1%7BStaffPersonalRefId%7D/get/response\
                s/200/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StaffPersonal:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StaffPersonal
            example:
              $ref: "#/paths/~1staffpersonal~1%7BStaffPersonalRefId%7D/get/response\
                s/200/content/application~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched object
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffPersonal:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                $ref: "#/paths/~1staffpersonal~1%7BStaffPersonalRefId%7D/get/respon\
                  ses/200/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffPersonal:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffPersonal
              example:
                $ref: "#/paths/~1staffpersonal~1%7BStaffPersonalRefId%7D/get/respon\
                  ses/200/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/patch/responses/de\
            fault"
  /staffassignment:
    post:
      tags:
        - StaffAssignment
        - StaffAssignmentBulk
      summary: Create one or more StaffAssignments
      description: <p>Bulk operation to create one or more assignments of a Staff member to
        their role at a Providers or other  Organisation.</p> <p>A staff member
        may have only have a single role at each Provider or KƒÅhui Ako at any
        one time (via the Organisation data object)</p>
      operationId: createStaffAssignments
      security:
        - sifDataObject:
            - SMS
            - SUPS
      parameters:
        - $ref: "#/paths/~1organisation/post/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on StaffAssignment
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffAssignments:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
            example:
              StaffAssignments:
                StaffAssignment:
                  - StaffAssignmentLocalId: 2020_T99001_8001
                    StaffAssignmentStatus: A
                    StaffMember:
                      LocalId: T99001
                    AssignedLocation:
                      RefId: "8001"
                    StartDate: 1995-01-02
                    StaffRole: "1001"
                    RecordAudit:
                      CreatedDateTime: 2020-05-26T00:00:00+1200
                      LastUpdatedDateTime: 2020-05-26T00:00:00+1200
          application/xml:
            schema:
              type: object
              properties:
                StaffAssignments:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
            example: >-
              <StaffAssignments>
                <StaffAssignment>
                  <StaffAssignmentLocalId>2020_T99001_8001</StaffAssignmentLocalId>
                  <StaffAssignmentStatus>A</StaffAssignmentStatus>
                  <StaffMember>
                    <LocalId>T99001</LocalId>
                  </StaffMember>
                  <AssignedLocation>
                    <RefId>8001</RefId>
                  </AssignedLocation>
                  <StartDate>1995-01-02</StartDate>
                  <StaffRole>1001</StaffRole>
                  <RecordAudit>
                    <CreatedDateTime>2020-05-26</CreatedDateTime>
                    <LastUpdatedDateTime>2020-05-26</LastUpdatedDateTime>
                  </RecordAudit>
                </StaffAssignment>
              </StaffAssignments>  
      responses:
        "200":
          description: Create successful; returns created objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects created, some creates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: StaffAssignment
                      properties:
                        StaffAssignment:
                          $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                - StaffAssignment:
                    StaffAssignmentLocalId: 2020_T99001_8001
                    StaffAssignmentStatus: A
                    StaffMember:
                      LocalId: T99001
                    AssignedLocation:
                      RefId: "8001"
                    StartDate: 1995-01-02
                    StaffRole: "1001"
                    RecordAudit:
                      CreatedDateTime: 2020-05-26T00:00:00+1200
                      LastUpdatedDateTime: 2020-05-26T00:00:00+1200
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: StaffAssignment
                          properties:
                            StaffAssignment:
                              $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example: >-
                <Response>
                  <StaffAssignment>
                    <StaffAssignmentLocalId>2020_T99001_8001</StaffAssignmentLocalId>
                    <StaffAssignmentStatus>A</StaffAssignmentStatus>
                    <StaffMember>
                      <LocalId>T99001</LocalId>
                    </StaffMember>
                    <AssignedLocation>
                      <RefId>8001</RefId>
                    </AssignedLocation>
                    <StartDate>1995-01-02</StartDate>
                    <StaffRole>1001</StaffRole>
                    <RecordAudit>
                      <CreatedDateTime>2020-05-26</CreatedDateTime>
                      <LastUpdatedDateTime>2020-05-26</LastUpdatedDateTime>
                    </RecordAudit>
                  </StaffAssignment>
                  <Error>
                    <error>1009</error>
                    <when>2020-07-16T20:00:46.000Z</when>
                    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                    <localId>ST-002</localId>
                    <refId/>
                  </Error>      
                </Response>
    get:
      tags:
        - StaffAssignment
        - StaffAssignmentBulk
      summary: Retrieve one or more StaffAssignments
      description: "<p>Bulk operation to retrieve all available assignments of a Staff
        member to their role at the given Provider or other Organisation.</p>
        <p>A staff member may have only have a single role at each Provider or
        KƒÅhui Ako at any one time (via the Organisation data object)</p>    "
      operationId: getStaffAssignments
      security:
        - sifDataObject:
            - SMS
            - SUPS
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/12"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - StaffAssignment
        - StaffAssignmentBulk
      summary: Update one or more StaffAssignments
      description: "<p>Bulk operation to update one or more assignments of a Staff member
        to their role at the given Provider or other Organisation.</p> <p>A
        staff member may have only have a single role at each Provider or KƒÅhui
        Ako at any one time (via the Organisation data object)</p>    "
      operationId: updateStaffAssignments
      security:
        - sifDataObject:
            - SMS
            - SUPS
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on StaffAssignment
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffAssignments:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
            example:
              $ref: "#/paths/~1staffassignment/post/requestBody/content/application\
                ~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StaffAssignments:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
            example:
              $ref: "#/paths/~1staffassignment/post/requestBody/content/application\
                ~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects updated, some updates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: StaffAssignment
                      properties:
                        StaffAssignment:
                          $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                $ref: "#/paths/~1staffassignment/post/responses/default/content/app\
                  lication~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: StaffAssignment
                          properties:
                            StaffAssignment:
                              $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                $ref: "#/paths/~1staffassignment/post/responses/default/content/app\
                  lication~1xml/example"
    patch:
      tags:
        - StaffAssignment
        - StaffAssignmentBulk
      summary: Patch one or more StaffAssignments
      description: "<p>Bulk operation to update one or more fields of one or more
        assignments of a Staff member to their role at the given Provider or
        other Organisation.</p> <p>A staff member may have only have a single
        role at each Provider or KƒÅhui Ako at any one time (via the Organisation
        data object)</p>    "
      operationId: patchStaffAssignments
      security:
        - sifDataObject:
            - SMS
            - SUPS
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on StaffAssignment
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffAssignments:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StaffAssignments
            example:
              $ref: "#/paths/~1staffassignment/post/requestBody/content/application\
                ~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StaffAssignments:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StaffAssignments
            example:
              $ref: "#/paths/~1staffassignment/post/requestBody/content/application\
                ~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects patched, some patches failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: StaffAssignment
                      properties:
                        StaffAssignment:
                          $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                $ref: "#/paths/~1staffassignment/post/responses/default/content/app\
                  lication~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: StaffAssignment
                          properties:
                            StaffAssignment:
                              $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                $ref: "#/paths/~1staffassignment/post/responses/default/content/app\
                  lication~1xml/example"
  "/staffassignment/{StaffPersonalRefId}":
    get:
      tags:
        - StaffAssignment
        - StaffAssignmentSingle
      summary: Retrieve a single StaffAssignment
      description: "<p>Retrieve a single assignment of a Staff member to their role at the
        given Provider or other Organisation.</p> <p>A staff member may have
        only have a single role at each Provider or KƒÅhui Ako at any one time
        (via the Organisation data object)</p>    "
      operationId: getStaffAssignment
      security:
        - sifDataObject:
            - SMS
            - SUPS
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: StaffPersonalRefId
          in: path
          required: true
          description: System RefId of the staff member.
          schema:
            type: string
          example: 7b5256e7-01fe-4f5b-89e6-2e5d1e1c9a52
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffAssignment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                StaffAssignment:
                  StaffAssignmentLocalId: 2020_T99001_8001
                  StaffAssignmentStatus: A
                  StaffMember:
                    LocalId: T99001
                  AssignedLocation:
                    RefId: "8001"
                  StartDate: 1995-01-02
                  StaffRole: "1001"
                  RecordAudit:
                    CreatedDateTime: 2020-05-26T00:00:00+1200
                    LastUpdatedDateTime: 2020-05-26T00:00:00+1200
            application/xml:
              schema:
                type: object
                properties:
                  StaffAssignment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example: >-
                <StaffAssignment>
                  <StaffAssignmentLocalId>2020_T99001_8001</StaffAssignmentLocalId>
                  <StaffAssignmentStatus>A</StaffAssignmentStatus>
                  <StaffMember>
                    <LocalId>T99001</LocalId>
                  </StaffMember>
                  <AssignedLocation>
                    <RefId>8001</RefId>
                  </AssignedLocation>
                  <StartDate>1995-01-02</StartDate>
                  <StaffRole>1001</StaffRole>
                  <RecordAudit>
                    <CreatedDateTime>2020-05-26</CreatedDateTime>
                    <LastUpdatedDateTime>2020-05-26</LastUpdatedDateTime>
                  </RecordAudit>
                </StaffAssignment>
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - StaffAssignment
        - StaffAssignmentSingle
      summary: Update a single StaffAssignment
      description: "<p>Update a single assignment of a Staff member to their role at the
        given Provider or other Organisation.</p> <p>A staff member may have
        only have a single role at each Provider or KƒÅhui Ako at any one time
        (via the Organisation data object)</p>    "
      operationId: updateStaffAssignment
      security:
        - sifDataObject:
            - SMS
            - SUPS
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/parameters\
            /12"
      requestBody:
        description: CRUD operation on StaffAssignment
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffAssignment:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
            example:
              $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/respon\
                ses/200/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StaffAssignment:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
            example:
              $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/respon\
                ses/200/content/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated object
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffAssignment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/resp\
                  onses/200/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffAssignment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/resp\
                  onses/200/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/put/responses/defa\
            ult"
    patch:
      tags:
        - StaffAssignment
        - StaffAssignmentSingle
      summary: Patch a single StaffAssignment
      description: "<p>Update one or more fields of a single assignment of a Staff member
        to their role at the given Provider or other Organisation.</p> <p>A
        staff member may have only have a single role at each Provider or KƒÅhui
        Ako at any one time (via the Organisation data object)</p>    "
      operationId: patchStaffAssignment
      security:
        - sifDataObject:
            - SMS
            - SUPS
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/parameters\
            /12"
      requestBody:
        description: CRUD operation on StaffAssignment
        content:
          application/json:
            schema:
              type: object
              properties:
                StaffAssignment:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StaffAssignment
            example:
              $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/respon\
                ses/200/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StaffAssignment:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StaffAssignment
            example:
              $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/respon\
                ses/200/content/application~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched object
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffAssignment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/resp\
                  onses/200/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffAssignment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignment
              example:
                $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/resp\
                  onses/200/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/patch/responses/de\
            fault"
  "/staffpersonal/{StaffPersonalRefId}/staffassignment":
    get:
      tags:
        - StaffAssignment
        - StaffAssignmentByStaff
      summary: Retrieve StaffAssignments by Staff Member
      description: "<p>Retrieve all available assignments of a particular Staff member to
        their role at any Provider or other Organisation.</p> <p>A staff member
        may have only have a single role at each Provider or KƒÅhui Ako at any
        one time (via the Organisation data object)</p>    "
      operationId: getStaffAssignmentsByStaff
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1staffassignment~1%7BStaffPersonalRefId%7D/get/parameters\
            /12"
      security:
        - sifDataObject:
            - SMS
            - SUPS
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StaffAssignments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StaffAssignments
              example:
                $ref: "#/paths/~1staffassignment/post/requestBody/content/applicati\
                  on~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
  /studentproviderenrolment:
    post:
      tags:
        - StudentProviderEnrolment
        - StudentProviderEnrolmentBulk
      summary: Create one or more StudentProviderEnrolments
      description: >-
        <p>Bulk operation to create one or more student enrolments with an
        education provider.</p> 

        <p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>
      operationId: createStudentProviderEnrolments
      parameters:
        - $ref: "#/paths/~1organisation/post/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on StudentProviderEnrolment
        content:
          application/json:
            schema:
              type: object
              properties:
                StudentProviderEnrolments:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
            example:
              StudentProviderEnrolment:
                StudentProviderEnrolmentLocalId: 2020_8001_ST1000001
                Student:
                  LocalId: ST1000001
                  NationalStudentNumber: 9001000001
                Provider:
                  RefId: "8001"
                StudentId: ST1000001
                EntryDate: 2015-03-07
                Status: ACT
                ECEEducationHistoryList:
                  ECEType:
                    - Type: EPG
                SchoolEnrolmentList:
                  SchoolEnrolment:
                    - SchoolCalendarYear: 2020
                      StartDate: 2020-01-27
                      MembershipType: BASE
                      YearLevel: 6
                      FTE: 1
                      FundingType: SF
                      FundingYearLevel: 6
                      Curriculum: NZC
          application/xml:
            schema:
              type: object
              properties:
                StudentProviderEnrolments:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
            example: >-
              <StudentProviderEnrolment>
                <StudentProviderEnrolmentLocalId>2020_8001_ST1000001</StudentProviderEnrolmentLocalId>
                <Student>
                  <LocalId>ST1000001</LocalId>
                  <NationalStudentNumber>9001000001</NationalStudentNumber>
                </Student>
                <Provider>
                  <RefId>8001</RefId>
                </Provider>
                <StudentId>ST1000001</StudentId>
                <EntryDate>2015-03-07</EntryDate>
                <Status>ACT</Status>
                <ECEEducationHistoryList>
                  <ECEType>
                    <Type>EPG</Type>
                  </ECEType>
                </ECEEducationHistoryList>
                <SchoolEnrolmentList>
                  <SchoolEnrolment>
                    <SchoolCalendarYear>2020</SchoolCalendarYear>
                    <StartDate>2020-01-27</StartDate>
                    <MembershipType>BASE</MembershipType>
                    <YearLevel>6</YearLevel>
                    <FTE>1</FTE>
                    <FundingType>SF</FundingType>
                    <FundingYearLevel>6</FundingYearLevel>
                    <Curriculum>NZC</Curriculum>
                  </SchoolEnrolment>
                </SchoolEnrolmentList>
              </StudentProviderEnrolment>  
      responses:
        "200":
          description: Create successful; returns created objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects created, some creates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: StudentProviderEnrolment
                      properties:
                        StudentProviderEnrolment:
                          $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                - StudentProviderEnrolment:
                    StudentProviderEnrolmentLocalId: 2020_8001_ST1000001
                    Student:
                      LocalId: ST1000001
                      NationalStudentNumber: 9001000001
                    Provider:
                      RefId: "8001"
                    StudentId: ST1000001
                    EntryDate: 2015-03-07
                    Status: ACT
                    ECEEducationHistoryList:
                      ECEType:
                        - Type: EPG
                    SchoolEnrolmentList:
                      SchoolEnrolment:
                        - SchoolCalendarYear: 2020
                          StartDate: 2020-01-27
                          MembershipType: BASE
                          YearLevel: 6
                          FTE: 1
                          FundingType: SF
                          FundingYearLevel: 6
                          Curriculum: NZC
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: StudentProviderEnrolment
                          properties:
                            StudentProviderEnrolment:
                              $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example: >-
                <Response>
                  <Error>
                    <error>1009</error>
                    <when>2020-07-16T20:00:46.000Z</when>
                    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                    <localId>ST-002</localId>
                    <refId/>
                  </Error>      
                </Response>
    get:
      tags:
        - StudentProviderEnrolment
        - StudentProviderEnrolmentBulk
      summary: Retrieve one or more StudentProviderEnrolments
      description: >-
        <p>Bulk operation to retrieve all available student enrolments with the
        given education provider.</p>

        <p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>
      operationId: getStudentProviderEnrolments
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: status
          in: query
          description: Filter the results; based upon the Status of the enrolment
          required: false
          schema:
            oneOf:
              - enum:
                  - APP
                title: Application
                description: <p>Student has applied to become a Student at the Provider,
                  this pre-enrolment has been received, and is being processed
                  by the provider. It has not yet been accepted or declined by
                  the provider.</p>
              - enum:
                  - ACC
                title: Accepted
                description: <p>The Provider has processed the application, validated it
                  against school zoning rules, and other acceptance criteria.
                  The provider has accepted the enrolment and will have a place
                  for the Student if they choose to take it up. Student has
                  accepted the enrolment and is expecting to take up the
                  enrolment at the agreed future date.</p>
              - enum:
                  - CAN
                title: Cancelled
                description: <p>The enrolment application has been declined by the
                  Provider, or discontinued by the Student, prior to becoming an
                  ACTIVE enrolment.</p>
              - enum:
                  - ACT
                title: Active
                description: <p>The student has taken up the enrolment, and has attended
                  classes for the first time.</p>
              - enum:
                  - WIT
                title: Withdrawn
                description: The Student has left the Provider, after the enrolment was
                  made ACTIVE
              - enum:
                  - PEN
                title: Pending
                description: <p>The enrolment has been accepted by the Provider, taken up
                  by the Student, and the student has attended their first day;
                  but the enrolment is unable to be set to ACTIVE, because there
                  is still an ACTIVE enrolment for the student at a (previous)
                  provider. Once the blocking Provider has put their enrolment
                  to WITHDRAWN, this enrolment can be moved to 'ACTIVE'.</p>
          example: ACT
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - StudentProviderEnrolment
        - StudentProviderEnrolmentBulk
      summary: Update one or more StudentProviderEnrolments
      description: >-
        <p>Bulk operation to update one or more student enrolments with the
        given education provider.</p>

        <p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>
      operationId: updateStudentProviderEnrolments
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on StudentProviderEnrolment
        content:
          application/json:
            schema:
              type: object
              properties:
                StudentProviderEnrolments:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
            example:
              $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/ap\
                plication~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StudentProviderEnrolments:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
            example:
              $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/ap\
                plication~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects updated, some updates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: StudentProviderEnrolment
                      properties:
                        StudentProviderEnrolment:
                          $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/responses/default/co\
                  ntent/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: StudentProviderEnrolment
                          properties:
                            StudentProviderEnrolment:
                              $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/responses/default/co\
                  ntent/application~1xml/example"
    patch:
      tags:
        - StudentProviderEnrolment
        - StudentProviderEnrolmentBulk
      summary: Patch one or more StudentProviderEnrolments
      description: >-
        <p>Bulk operation to update one or more fields of one or more student
        enrolments with the given education provider.</p>

        <p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>
      operationId: patchStudentProviderEnrolments
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on StudentProviderEnrolment
        content:
          application/json:
            schema:
              type: object
              properties:
                StudentProviderEnrolments:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StudentProviderEnrolments
            example:
              $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/ap\
                plication~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StudentProviderEnrolments:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StudentProviderEnrolments
            example:
              $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/ap\
                plication~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects patched, some patches failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: StudentProviderEnrolment
                      properties:
                        StudentProviderEnrolment:
                          $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/responses/default/co\
                  ntent/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: StudentProviderEnrolment
                          properties:
                            StudentProviderEnrolment:
                              $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/responses/default/co\
                  ntent/application~1xml/example"
  "/studentproviderenrolment/{StudentProviderEnrolmentRefId}":
    get:
      tags:
        - StudentProviderEnrolment
        - StudentProviderEnrolmentBulk
      summary: Retrieve a single StudentProviderEnrolments
      description: >-
        <p>Retrieve a particular student enrolment with the given education
        provider.</p>

        <p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>
      operationId: getStudentProviderEnrolment
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: StudentProviderEnrolmentRefId
          in: path
          description: <p>The SIF GUID for the record of the particular
            student's  particular enrolment with the given Provider.</p>
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  StudentProviderEnrolment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StudentProviderEnrolment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - StudentProviderEnrolment
        - StudentProviderEnrolmentBulk
      summary: Update a single StudentProviderEnrolments
      description: >-
        <p>Update a particular student enrolment with the given education
        provider.</p>

        <p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>
      operationId: updateStudentProviderEnrolment
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: StudentProviderEnrolmentRefId
          in: path
          description: <p>The SIF GUID for the record of the particular
            student's  particular enrolment with the given Provider.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on StudentProviderEnrolment
        content:
          application/json:
            schema:
              type: object
              properties:
                StudentProviderEnrolment:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
            example:
              $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/ap\
                plication~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StudentProviderEnrolment:
                  $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
            example:
              $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/ap\
                plication~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated object
          content:
            application/json:
              schema:
                type: object
                properties:
                  StudentProviderEnrolment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StudentProviderEnrolment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/put/responses/defa\
            ult"
    patch:
      tags:
        - StudentProviderEnrolment
        - StudentProviderEnrolmentBulk
      summary: Patch a single StudentProviderEnrolments
      description: >-
        <p>Update one or more fields of a particular student enrolment with the
        given education provider.</p>

        <p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>
      operationId: patchStudentProviderEnrolment
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: StudentProviderEnrolmentRefId
          in: path
          description: <p>The SIF GUID for the record of the particular
            student's  particular enrolment with the given Provider.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on StudentProviderEnrolment
        content:
          application/json:
            schema:
              type: object
              properties:
                StudentProviderEnrolment:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StudentProviderEnrolment
            example:
              $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/ap\
                plication~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                StudentProviderEnrolment:
                  $ref: jsonSchema.NZ.update.yaml#/properties/StudentProviderEnrolment
            example:
              $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/ap\
                plication~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched object
          content:
            application/json:
              schema:
                type: object
                properties:
                  StudentProviderEnrolment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StudentProviderEnrolment:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolment
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/patch/responses/de\
            fault"
  "/studentpersonal/{StudentPersonalRefId}/studentproviderenrolment":
    get:
      tags:
        - StudentProviderEnrolment
        - StudentProviderEnrolmentBulk
      summary: Retrieve StudentProviderEnrolments by Student
      description: >-
        <p>Retrieve all available student enrolments with any education
        provider, for the given Student.</p>

        <p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>
      operationId: getStudentProviderEnrolmentByStudent
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: StudentPersonalRefId
          in: path
          required: true
          description: System RefId of the student.
          schema:
            type: string
          example: 979fbe68-4cfd-41c1-a98d-40e5601c7d98
        - $ref: "#/paths/~1studentproviderenrolment/get/parameters/12"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  StudentProviderEnrolments:
                    $ref: jsonSchema.NZ.create.yaml#/properties/StudentProviderEnrolments
              example:
                $ref: "#/paths/~1studentproviderenrolment/post/requestBody/content/\
                  application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
  /schedule:
    post:
      tags:
        - Schedule
        - ScheduleBulk
      summary: Create one or more timetable Schedules
      description: Bulk operation to create one or more timetable Schedules within the
        scope of a given Provider
      operationId: createSchedules
      parameters:
        - $ref: "#/paths/~1organisation/post/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on Schedule
        content:
          application/json:
            schema:
              type: object
              properties:
                Schedules:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
            example:
              Schedules:
                Schedule:
                  - ScheduleLocalId: 8003_Sched_2020
                    ScheduleName: Koromiko High Schedule - 2020
                    StartDate: 2020-01-27
                    EndDate: 2020-12-18
                    Organisation:
                      RefId: "8003"
                    AcademicDayList:
                      AcademicDay:
                        - LocalId: 8003_Day_A
                          BellSchedule:
                            LocalId: 8003_Regular
                          PeriodList:
                            Period:
                              - LocalId: 8003_HR
                              - LocalId: 8003_P1
                              - LocalId: 8003_P2
                              - LocalId: 8003_P3
                              - LocalId: 8003_P4
                              - LocalId: 8003_P5
                        - LocalId: 8003_Day_B
                          BellSchedule:
                            LocalId: 8003_Regular
                          PeriodList:
                            Period:
                              - LocalId: 8003_HR
                              - LocalId: 8003_P1
                              - LocalId: 8003_P2
                              - LocalId: 8003_P3
                              - LocalId: 8003_P4
                              - LocalId: 8003_P5
          application/xml:
            schema:
              type: object
              properties:
                Schedules:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
            example: |-
              <Schedules>
                <Schedule>
                  <ScheduleLocalId>8003_Sched_2020</ScheduleLocalId>
                  <ScheduleName>Koromiko High Schedule - 2020</ScheduleName>
                  <StartDate>2020-01-27</StartDate>
                  <EndDate>2020-12-18</EndDate>
                  <Organisation>
                    <RefId>8003</RefId>
                  </Organisation>
                  <AcademicDayList>
                    <AcademicDay>
                      <LocalId>8003_Day_A</LocalId>
                      <BellSchedule>
                        <LocalId>8003_Regular</LocalId>
                      </BellSchedule
                      <PeriodList>
                        <Period>
                          <LocalId>8003_HR</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P1</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P2</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P3</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P4</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P5</LocalId>
                        </Period>
                      </PeriodList>
                    </AcademicDay>
                    <AcademicDay>
                      <LocalId>8003_Day_B</LocalId>
                      <BellSchedule>
                        <LocalId>8003_Regular</LocalId>
                      </BellSchedule>
                      <PeriodList>
                        <Period>
                          <LocalId>8003_HR</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P1</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P2</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P3</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P4</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P5</LocalId>
                        </Period>
                      </PeriodList>            
                    </AcademicDay>
                  </AcademicDayList>
                </Schedule>
              </Schedules>
      responses:
        "200":
          description: Create successful; returns created objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  Schedules:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
              example:
                $ref: "#/paths/~1schedule/post/requestBody/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  Schedules:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
              example:
                $ref: "#/paths/~1schedule/post/requestBody/content/application~1xml\
                  /example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects created, some creates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: Schedule
                      properties:
                        Schedule:
                          $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                - Schedule:
                    ScheduleLocalId: 8003_Sched_2020
                    ScheduleName: Koromiko High Schedule - 2020
                    StartDate: 2020-01-27
                    EndDate: 2020-12-18
                    Organisation:
                      RefId: "8003"
                    AcademicDayList:
                      AcademicDay:
                        - LocalId: 8003_Day_A
                          BellSchedule:
                            LocalId: 8003_Regular
                          PeriodList:
                            Period:
                              - LocalId: 8003_HR
                              - LocalId: 8003_P1
                              - LocalId: 8003_P2
                              - LocalId: 8003_P3
                              - LocalId: 8003_P4
                              - LocalId: 8003_P5
                        - LocalId: 8003_Day_B
                          BellSchedule:
                            LocalId: 8003_Regular
                          PeriodList:
                            Period:
                              - LocalId: 8003_HR
                              - LocalId: 8003_P1
                              - LocalId: 8003_P2
                              - LocalId: 8003_P3
                              - LocalId: 8003_P4
                              - LocalId: 8003_P5
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: Schedule
                          properties:
                            Schedule:
                              $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example: >-
                <Response>
                  <Schedule>
                    <ScheduleLocalId>8003_Sched_2020</ScheduleLocalId>
                    <ScheduleName>Koromiko High Schedule - 2020</ScheduleName>
                    <StartDate>2020-01-27</StartDate>
                    <EndDate>2020-12-18</EndDate>
                    <Organisation>
                      <RefId>8003</RefId>
                    </Organisation>
                    <AcademicDayList>
                      <AcademicDay>
                        <LocalId>8003_Day_A</LocalId>
                        <BellSchedule>
                          <LocalId>8003_Regular</LocalId>
                        </BellSchedule
                        <PeriodList>
                          <Period>
                            <LocalId>8003_HR</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P1</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P2</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P3</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P4</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P5</LocalId>
                          </Period>
                        </PeriodList>
                      </AcademicDay>
                      <AcademicDay>
                        <LocalId>8003_Day_B</LocalId>
                        <BellSchedule>
                          <LocalId>8003_Regular</LocalId>
                        </BellSchedule>
                        <PeriodList>
                          <Period>
                            <LocalId>8003_HR</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P1</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P2</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P3</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P4</LocalId>
                          </Period>
                          <Period>
                            <LocalId>8003_P5</LocalId>
                          </Period>
                        </PeriodList>            
                      </AcademicDay>
                    </AcademicDayList>
                  </Schedule> 
                  <Error>
                    <error>1009</error>
                    <when>2020-07-16T20:00:46.000Z</when>        
                    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                    <localId>ST-002</localId>
                    <refId/>
                  </Error>      
                </Response>
    get:
      tags:
        - Schedule
        - ScheduleBulk
      summary: Retrieve one or more timetable Schedules
      description: Bulk operation to retrieve all available timetable Schedules within the
        scope of a given Provider
      operationId: getSchedules
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Schedules:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
              example:
                $ref: "#/paths/~1schedule/post/requestBody/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  Schedules:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
              example:
                $ref: "#/paths/~1schedule/post/requestBody/content/application~1xml\
                  /example"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - Schedule
        - ScheduleBulk
      summary: Update one or more timetable Schedules
      description: Bulk operation to update one or more timetable Schedules within the
        scope of a given Provider
      operationId: updateSchedules
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on Schedule
        content:
          application/json:
            schema:
              type: object
              properties:
                Schedules:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
            example:
              $ref: "#/paths/~1schedule/post/requestBody/content/application~1json/\
                example"
          application/xml:
            schema:
              type: object
              properties:
                Schedules:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
            example:
              $ref: "#/paths/~1schedule/post/requestBody/content/application~1xml/e\
                xample"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  Schedules:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
              example:
                $ref: "#/paths/~1schedule/post/requestBody/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  Schedules:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
              example:
                $ref: "#/paths/~1schedule/post/requestBody/content/application~1xml\
                  /example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects updated, some updates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: Schedule
                      properties:
                        Schedule:
                          $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                $ref: "#/paths/~1schedule/post/responses/default/content/applicatio\
                  n~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: Schedule
                          properties:
                            Schedule:
                              $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                $ref: "#/paths/~1schedule/post/responses/default/content/applicatio\
                  n~1xml/example"
    patch:
      tags:
        - Schedule
        - ScheduleBulk
      summary: Patch one or more timetable Schedules
      description: Bulk operation to update one or more fields of one or more timetable
        Schedules within the scope of a given Provider
      operationId: patchSchedules
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
      requestBody:
        description: CRUD operation on Schedule
        content:
          application/json:
            schema:
              type: object
              properties:
                Schedules:
                  $ref: jsonSchema.NZ.update.yaml#/properties/Schedules
            example:
              $ref: "#/paths/~1schedule/post/requestBody/content/application~1json/\
                example"
          application/xml:
            schema:
              type: object
              properties:
                Schedules:
                  $ref: jsonSchema.NZ.update.yaml#/properties/Schedules
            example:
              $ref: "#/paths/~1schedule/post/requestBody/content/application~1xml/e\
                xample"
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  Schedules:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
              example:
                $ref: "#/paths/~1schedule/post/requestBody/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  Schedules:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedules
              example:
                $ref: "#/paths/~1schedule/post/requestBody/content/application~1xml\
                  /example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects patched, some patches failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: Schedule
                      properties:
                        Schedule:
                          $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                $ref: "#/paths/~1schedule/post/responses/default/content/applicatio\
                  n~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: Schedule
                          properties:
                            Schedule:
                              $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                $ref: "#/paths/~1schedule/post/responses/default/content/applicatio\
                  n~1xml/example"
  "/schedule/{ScheduleRefId}":
    get:
      tags:
        - Schedule
        - ScheduleSingle
      summary: Retrieve a single timetable Schedule
      description: Retrieve a particular timetable Schedule within the scope of a given
        Provider
      operationId: getSchedule
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: ScheduleRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify the requested
            timetable Schedule.</p>
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Schedule:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                Schedule:
                  ScheduleLocalId: 8003_Sched_2020
                  ScheduleName: Koromiko High Schedule - 2020
                  StartDate: 2020-01-27
                  EndDate: 2020-12-18
                  Organisation:
                    RefId: "8003"
                  AcademicDayList:
                    AcademicDay:
                      - LocalId: 8003_Day_A
                        BellSchedule:
                          LocalId: 8003_Regular
                        PeriodList:
                          Period:
                            - LocalId: 8003_HR
                            - LocalId: 8003_P1
                            - LocalId: 8003_P2
                            - LocalId: 8003_P3
                            - LocalId: 8003_P4
                            - LocalId: 8003_P5
                      - LocalId: 8003_Day_B
                        BellSchedule:
                          LocalId: 8003_Regular
                        PeriodList:
                          Period:
                            - LocalId: 8003_HR
                            - LocalId: 8003_P1
                            - LocalId: 8003_P2
                            - LocalId: 8003_P3
                            - LocalId: 8003_P4
                            - LocalId: 8003_P5
            application/xml:
              schema:
                type: object
                properties:
                  Schedule:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example: |-
                <Schedule>
                  <ScheduleLocalId>8003_Sched_2020</ScheduleLocalId>
                  <ScheduleName>Koromiko High Schedule - 2020</ScheduleName>
                  <StartDate>2020-01-27</StartDate>
                  <EndDate>2020-12-18</EndDate>
                  <Organisation>
                    <RefId>8003</RefId>
                  </Organisation>
                  <AcademicDayList>
                    <AcademicDay>
                      <LocalId>8003_Day_A</LocalId>
                      <BellSchedule>
                        <LocalId>8003_Regular</LocalId>
                      </BellSchedule
                      <PeriodList>
                        <Period>
                          <LocalId>8003_HR</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P1</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P2</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P3</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P4</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P5</LocalId>
                        </Period>
                      </PeriodList>
                    </AcademicDay>
                    <AcademicDay>
                      <LocalId>8003_Day_B</LocalId>
                      <BellSchedule>
                        <LocalId>8003_Regular</LocalId>
                      </BellSchedule>
                      <PeriodList>
                        <Period>
                          <LocalId>8003_HR</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P1</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P2</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P3</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P4</LocalId>
                        </Period>
                        <Period>
                          <LocalId>8003_P5</LocalId>
                        </Period>
                      </PeriodList>            
                    </AcademicDay>
                  </AcademicDayList>
                </Schedule> 
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - Schedule
        - ScheduleSingle
      summary: Update a single timetable Schedule
      description: Update a particular timetable Schedule within the scope of a given
        Provider
      operationId: updateSchedule
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: ScheduleRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify the requested
            timetable Schedule.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on Schedule
        content:
          application/json:
            schema:
              type: object
              properties:
                Schedule:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D/get/responses/200/cont\
                ent/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                Schedule:
                  $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D/get/responses/200/cont\
                ent/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated object
          content:
            application/json:
              schema:
                type: object
                properties:
                  Schedule:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D/get/responses/200/co\
                  ntent/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Schedule:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D/get/responses/200/co\
                  ntent/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/put/responses/defa\
            ult"
    patch:
      tags:
        - Schedule
        - ScheduleSingle
      summary: Patch a single timetable Schedule
      description: Update one or more fields of a particular timetable Schedule within the
        scope of a given Provider
      operationId: patchSchedule
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: ScheduleRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify the requested
            timetable Schedule.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on Schedule
        content:
          application/json:
            schema:
              type: object
              properties:
                Schedule:
                  $ref: jsonSchema.NZ.update.yaml#/properties/Schedule
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D/get/responses/200/cont\
                ent/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                Schedule:
                  $ref: jsonSchema.NZ.update.yaml#/properties/Schedule
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D/get/responses/200/cont\
                ent/application~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched object
          content:
            application/json:
              schema:
                type: object
                properties:
                  Schedule:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D/get/responses/200/co\
                  ntent/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Schedule:
                    $ref: jsonSchema.NZ.create.yaml#/properties/Schedule
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D/get/responses/200/co\
                  ntent/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/patch/responses/de\
            fault"
  "/schedule/{ScheduleRefId}/scheduleperiod":
    post:
      tags:
        - SchedulePeriod
        - SchedulePeriodBulk
      summary: Create one or more timetable Schedule Periods
      description: Bulk operation to create one or more timetable SchedulePeriods within
        the scope of a particular timetable <a href="#tag/Schedule">Schedule</a>
        at the given Provider
      operationId: createSchedulePeriods
      parameters:
        - $ref: "#/paths/~1organisation/post/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - name: ScheduleRefId
          in: path
          required: true
          description: System RefId of the timetable Schedule
          schema:
            type: string
          example: b43b2ae8-6b2a-42bc-802c-c4c5cf32eebf
      requestBody:
        description: CRUD operation on SchedulePeriod
        content:
          application/json:
            schema:
              type: object
              properties:
                SchedulePeriods:
                  $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
            example:
              SchedulePeriods:
                SchedulePeriod:
                  - SchedulePeriodLocalId: 8003_HR
                    PeriodName: Homeroom
                    Organisation:
                      RefId: "8003"
                    Schedule:
                      LocalId: 8003_Sched_2020
                  - SchedulePeriodLocalId: 8003_P1
                    PeriodName: Period 1
                    Organisation:
                      RefId: "8003"
                    Schedule:
                      LocalId: 8003_Sched_2020
          application/xml:
            schema:
              type: object
              properties:
                SchedulePeriods:
                  $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
            example: |-
              <SchedulePeriods>
                <SchedulePeriod>
                  <SchedulePeriodLocalId>8003_HR</SchedulePeriodLocalId>
                  <PeriodName>Homeroom</PeriodName>
                  <Organisation>
                    <RefId>8003</RefId>
                  </Organisation>
                  <Schedule>
                    <LocalId>8003_Sched_2020<LocalId>
                  </Schedule>
                </SchedulePeriod>
                <SchedulePeriod>
                  <SchedulePeriodLocalId>8003_P1</SchedulePeriodLocalId>
                  <PeriodName>Period 1</PeriodName>
                  <Organisation>
                    <RefId>8003</RefId>
                  </Organisation>
                  <Schedule>
                    <LocalId>8003_Sched_2020</LocalId>
                  </Schedule>
                </SchedulePeriod>
              </SchedulePeriods>
      responses:
        "200":
          description: Create successful; returns created objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  SchedulePeriods:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /requestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  SchedulePeriods:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /requestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects created, some creates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: SchedulePeriod
                      properties:
                        SchedulePeriod:
                          $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                - SchedulePeriod:
                    SchedulePeriodLocalId: 8003_HR
                    PeriodName: Homeroom
                    Organisation:
                      RefId: "8003"
                    Schedule:
                      LocalId: 8003_Sched_2020
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: SchedulePeriod
                          properties:
                            SchedulePeriod:
                              $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example: >-
                <Response>
                  <SchedulePeriod>
                    <SchedulePeriodLocalId>8003_HR</SchedulePeriodLocalId>
                    <PeriodName>Homeroom</PeriodName>
                    <Organisation>
                      <RefId>8003</RefId>
                    </Organisation>
                    <Schedule>
                      <LocalId>8003_Sched_2020<LocalId>
                    </Schedule>
                  </SchedulePeriod>
                  <Error>
                    <error>1009</error>
                    <when>2020-07-16T20:00:46.000Z</when>
                    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                    <localId>ST-002</localId>
                    <refId/>
                  </Error>      
                </Response>
    get:
      tags:
        - SchedulePeriod
        - SchedulePeriodBulk
      summary: Retrieve one or more timetable Schedule Periods
      description: Bulk operation to create one or more timetable SchedulePeriods within
        the scope of a particular timetable <a href="#tag/Schedule">Schedule</a>
        at the given Provider
      operationId: getSchedulePeriods
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  SchedulePeriods:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /requestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  SchedulePeriods:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /requestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - SchedulePeriod
        - SchedulePeriodBulk
      summary: Update one or more timetable Schedule Periods
      description: Bulk operation to update one or more timetable SchedulePeriods within
        the scope of a particular timetable <a href="#tag/Schedule">Schedule</a>
        at the given Provider
      operationId: updateSchedulePeriods
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      requestBody:
        description: CRUD operation on SchedulePeriod
        content:
          application/json:
            schema:
              type: object
              properties:
                SchedulePeriods:
                  $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/r\
                equestBody/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                SchedulePeriods:
                  $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/r\
                equestBody/content/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  SchedulePeriods:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /requestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  SchedulePeriods:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /requestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects updated, some updates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: SchedulePeriod
                      properties:
                        SchedulePeriod:
                          $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /responses/default/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: SchedulePeriod
                          properties:
                            SchedulePeriod:
                              $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /responses/default/content/application~1xml/example"
    patch:
      tags:
        - SchedulePeriod
        - SchedulePeriodBulk
      summary: Patch one or more timetable Schedule Periods
      description: Bulk operation to update one or more fields of one or more timetable
        SchedulePeriods within the scope of a particular timetable <a
        href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: patchSchedulePeriods
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      requestBody:
        description: CRUD operation on SchedulePeriod
        content:
          application/json:
            schema:
              type: object
              properties:
                SchedulePeriods:
                  $ref: jsonSchema.NZ.update.yaml#/properties/SchedulePeriods
            example:
              SchedulePeriod:
                SchedulePeriodLocalId: 8003_HR
                PeriodName: Homeroom
                Organisation:
                  RefId: "8003"
                Schedule:
                  LocalId: 8003_Sched_2020
          application/xml:
            schema:
              type: object
              properties:
                SchedulePeriods:
                  $ref: jsonSchema.NZ.update.yaml#/properties/SchedulePeriods
            example: |-
              <SchedulePeriod>
                <SchedulePeriodLocalId>8003_HR</SchedulePeriodLocalId>
                <PeriodName>Homeroom</PeriodName>
                <Organisation>
                  <RefId>8003</RefId>
                </Organisation>
                <Schedule>
                  <LocalId>8003_Sched_2020<LocalId>
                </Schedule>
              </SchedulePeriod>
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  SchedulePeriods:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /requestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  SchedulePeriods:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriods
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /requestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects patched, some patches failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: SchedulePeriod
                      properties:
                        SchedulePeriod:
                          $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /responses/default/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: SchedulePeriod
                          properties:
                            SchedulePeriod:
                              $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post\
                  /responses/default/content/application~1xml/example"
  "/schedule/{ScheduleRefId}/scheduleperiod/{SchedulePeriodRefId}":
    get:
      tags:
        - SchedulePeriod
        - SchedulePeriodSingle
      summary: Retrieve a single timetable Schedule Period
      description: Retrieve a single timetable SchedulePeriod within within the scope of a
        particular timetable <a href="#tag/Schedule">Schedule</a> at the given
        Provider
      operationId: getSchedulePeriod
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
        - name: SchedulePeriodRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify this Schedule
            Period.</p>
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  SchedulePeriod:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patc\
                  h/requestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  SchedulePeriod:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patc\
                  h/requestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - SchedulePeriod
        - SchedulePeriodSingle
      summary: Update a single timetable Schedule Period
      description: Update a single timetable SchedulePeriod within the scope of a
        particular timetable <a href="#tag/Schedule">Schedule</a> at the given
        Provider
      operationId: updateSchedulePeriod
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
        - name: SchedulePeriodRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify this Schedule
            Period.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on SchedulePeriod
        content:
          application/json:
            schema:
              type: object
              properties:
                SchedulePeriod:
                  $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patch/\
                requestBody/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                SchedulePeriod:
                  $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patch/\
                requestBody/content/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated object
          content:
            application/json:
              schema:
                type: object
                properties:
                  SchedulePeriod:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patc\
                  h/requestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  SchedulePeriod:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patc\
                  h/requestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/put/responses/defa\
            ult"
    patch:
      tags:
        - SchedulePeriod
        - SchedulePeriodSingle
      summary: Patch a single timetable Schedule Period
      description: Update one or more fields of a single timetable SchedulePeriod within
        the scope of a particular timetable <a href="#tag/Schedule">Schedule</a>
        at the given Provider
      operationId: patchSchedulePeriod
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
        - name: SchedulePeriodRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify this Schedule
            Period.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on SchedulePeriod
        content:
          application/json:
            schema:
              type: object
              properties:
                SchedulePeriod:
                  $ref: jsonSchema.NZ.update.yaml#/properties/SchedulePeriod
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patch/\
                requestBody/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                SchedulePeriod:
                  $ref: jsonSchema.NZ.update.yaml#/properties/SchedulePeriod
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patch/\
                requestBody/content/application~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched object
          content:
            application/json:
              schema:
                type: object
                properties:
                  SchedulePeriod:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patc\
                  h/requestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  SchedulePeriod:
                    $ref: jsonSchema.NZ.create.yaml#/properties/SchedulePeriod
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/patc\
                  h/requestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/patch/responses/de\
            fault"
  "/schedule/{ScheduleRefId}/scheduleterm":
    post:
      tags:
        - ScheduleTerm
        - ScheduleTermBulk
      summary: Create a one or more timetable ScheduleTerms
      description: Bulk operation to create one or more timetable ScheduleTerms for a
        particular <a href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: createScheduleTerms
      parameters:
        - $ref: "#/paths/~1organisation/post/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      requestBody:
        description: CRUD operation on ScheduleTerm
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleTerms:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
            example:
              ScheduleTerms:
                ScheduleTerm:
                  - ScheduleTermLocalId: 2020_8001_T1
                    TermName: "2020"
                    Organisation:
                      RefId: "8001"
                    SchoolYear: 2020
                    StartDate: 2020-01-27
                    EndDate: 2020-03-27
          application/xml:
            schema:
              type: object
              properties:
                ScheduleTerm:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
            example: |-
              <ScheduleTerms>
                <ScheduleTerm>
                  <ScheduleTermLocalId>2020_8001_T1</ScheduleTermLocalId>
                  <TermName>2020</TermName>
                  <Organisation>
                    <RefId>8001</RefId>
                  </Organisation>
                  <SchoolYear>2020</SchoolYear>
                  <StartDate>2020-01-27</StartDate>
                  <EndDate>2020-03-27<EndDate>
                </ScheduleTerm>
                <ScheduleTerm>
                  <ScheduleTermLocalId>2020_8001_T2</ScheduleTermLocalId>
                  <TermName>2020</TermName>
                  <Organisation>
                    <RefId>8001</RefId>
                  </Organisation>
                  <SchoolYear>2020</SchoolYear>
                  <StartDate>2020-04-15</StartDate>
                  <EndDate>2020-07-03</EndDate>
                </ScheduleTerm>
              </ScheduleTerms>
      responses:
        "200":
          description: Create successful; returns created objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleTerms:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  equestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  equestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects created, some creates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: ScheduleTerm
                      properties:
                        ScheduleTerm:
                          $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                - ScheduleTerm:
                    ScheduleTermLocalId: 2020_8001_T1
                    TermName: "2020"
                    Organisation:
                      RefId: "8001"
                    SchoolYear: 2020
                    StartDate: 2020-01-27
                    EndDate: 2020-03-27
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: ScheduleTerm
                          properties:
                            ScheduleTerm:
                              $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example: >-
                <Response>
                  <ScheduleTerm>
                    <ScheduleTermLocalId>2020_8001_T1</ScheduleTermLocalId>
                    <TermName>2020</TermName>
                    <Organisation>
                      <RefId>8001</RefId>
                    </Organisation>
                    <SchoolYear>2020</SchoolYear>
                    <StartDate>2020-01-27</StartDate>
                    <EndDate>2020-03-27<EndDate>
                  </ScheduleTerm>
                  <Error>
                    <error>1009</error>
                    <when>2020-07-16T20:00:46.000Z</when>
                    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                    <localId>ST-002</localId>
                    <refId/>
                  </Error>      
                </Response>
    get:
      tags:
        - ScheduleTerm
        - ScheduleTermBulk
      summary: Retrieve a one or more timetable ScheduleTerms
      description: Bulk operation to retrive one or more timetable ScheduleTerms for a
        particular <a href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: getScheduleTerms
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleTerms:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  equestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  equestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - ScheduleTerm
        - ScheduleTermBulk
      summary: Update a one or more timetable ScheduleTerms
      description: Bulk operation to update one or more timetable ScheduleTerms for a
        particular <a href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: updateScheduleTerms
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      requestBody:
        description: CRUD operation on ScheduleTerm
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleTerms:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/req\
                uestBody/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                ScheduleTerm:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/req\
                uestBody/content/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleTerms:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  equestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  equestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects updated, some updates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: ScheduleTerm
                      properties:
                        ScheduleTerm:
                          $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  esponses/default/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: ScheduleTerm
                          properties:
                            ScheduleTerm:
                              $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  esponses/default/content/application~1xml/example"
    patch:
      tags:
        - ScheduleTerm
        - ScheduleTermBulk
      summary: Patch a one or more timetable ScheduleTerms
      description: Bulk operation to update one or more fields of one or more timetable
        ScheduleTerms for a particular <a href="#tag/Schedule">Schedule</a> at
        the given Provider
      operationId: patchScheduleTerms
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      requestBody:
        description: CRUD operation on ScheduleTerm
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleTerms:
                  $ref: jsonSchema.NZ.update.yaml#/properties/ScheduleTerms
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/req\
                uestBody/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                ScheduleTerm:
                  $ref: jsonSchema.NZ.update.yaml#/properties/ScheduleTerms
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/req\
                uestBody/content/application~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleTerms:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  equestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerms
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  equestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects patched, some patches failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: ScheduleTerm
                      properties:
                        ScheduleTerm:
                          $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  esponses/default/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: ScheduleTerm
                          properties:
                            ScheduleTerm:
                              $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm/post/r\
                  esponses/default/content/application~1xml/example"
  "/schedule/{ScheduleRefId}/scheduleterm/{ScheduleTermRefId}":
    get:
      tags:
        - ScheduleTerm
        - ScheduleTermSingle
      summary: Retrieve a single more timetable ScheduleTerm
      description: Retrieve a particular timetable ScheduleTerm for a particular <a
        href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: getScheduleTerm
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
        - name: ScheduleTermRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify this Schedule
            Term.</p>
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                ScheduleTerm:
                  ScheduleTermLocalId: 2020_8001_T1
                  TermName: "2020"
                  Organisation:
                    RefId: "8001"
                  SchoolYear: 2020
                  StartDate: 2020-01-27
                  EndDate: 2020-03-27
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example: |-
                <ScheduleTerm>
                  <ScheduleTermLocalId>2020_8001_T1</ScheduleTermLocalId>
                  <TermName>2020</TermName>
                  <Organisation>
                    <RefId>8001</RefId>
                  </Organisation>
                  <SchoolYear>2020</SchoolYear>
                  <StartDate>2020-01-27</StartDate>
                  <EndDate>2020-03-27<EndDate>
                </ScheduleTerm>
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - ScheduleTerm
        - ScheduleTermSingle
      summary: Update a single more timetable ScheduleTerm
      description: Upate a particular timetable ScheduleTerm for a particular <a
        href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: updateScheduleTerm
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
        - name: ScheduleTermRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify this Schedule
            Term.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on ScheduleTerm
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleTerm:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm~1%7BSche\
                duleTermRefId%7D/get/responses/200/content/application~1json/ex\
                ample"
          application/xml:
            schema:
              type: object
              properties:
                ScheduleTerm:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm~1%7BSche\
                duleTermRefId%7D/get/responses/200/content/application~1xml/exa\
                mple"
      responses:
        "200":
          description: Update successful; returns updated object
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm~1%7BSc\
                  heduleTermRefId%7D/get/responses/200/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm~1%7BSc\
                  heduleTermRefId%7D/get/responses/200/content/application~1xml\
                  /example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/put/responses/defa\
            ult"
    patch:
      tags:
        - ScheduleTerm
        - ScheduleTermSingle
      summary: Patch a single more timetable ScheduleTerm
      description: Update one or more fields of a particular timetable ScheduleTerm for a
        particular <a href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: patchScheduleTerm
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
        - name: ScheduleTermRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify this Schedule
            Term.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on ScheduleTerm
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleTerm:
                  $ref: jsonSchema.NZ.update.yaml#/properties/ScheduleTerm
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm~1%7BSche\
                duleTermRefId%7D/get/responses/200/content/application~1json/ex\
                ample"
          application/xml:
            schema:
              type: object
              properties:
                ScheduleTerm:
                  $ref: jsonSchema.NZ.update.yaml#/properties/ScheduleTerm
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm~1%7BSche\
                duleTermRefId%7D/get/responses/200/content/application~1xml/exa\
                mple"
      responses:
        "200":
          description: Patch successful; returns patched object
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm~1%7BSc\
                  heduleTermRefId%7D/get/responses/200/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleTerm:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleTerm
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleterm~1%7BSc\
                  heduleTermRefId%7D/get/responses/200/content/application~1xml\
                  /example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/patch/responses/de\
            fault"
  "/schedule/{ScheduleRefId}/scheduledate":
    post:
      tags:
        - ScheduleDate
        - ScheduleDateBulk
      summary: Create one or more ScheduleDates
      description: Bulk operation to create one or more timetable ScheduleDates for a
        particular <a href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: createScheduleDates
      parameters:
        - $ref: "#/paths/~1organisation/post/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      requestBody:
        description: CRUD operation on ScheduleDate
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleDates:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
            example:
              ScheduleDates:
                ScheduleDate:
                  - ScheduleDateLocalId: 8003_2020_001
                    CalendarDate: 2020-01-27
                    Organisation:
                      RefId: "8003"
                    Term:
                      LocalId: 2020_8003_T1
                    Schedule:
                      LocalId: 8003_Sched_2020
                    AcademicDay:
                      LocalId: 8003_Day_A
                    BellSchedule:
                      LocalId: 8003_Regular
                    SchedulePeriodList:
                      SchedulePeriodTime:
                        - Period:
                            LocalId: 8003_HR
                          StartTime: 08:45:00
                          EndTime: 08:55:00
                        - Period:
                            LocalId: 8003_P1
                          StartTime: 09:00:00
                          EndTime: 09:50:00
                        - Period:
                            LocalId: 8003_P2
                          StartTime: 09:55:00
                          EndTime: 10:45:00
                        - Period:
                            LocalId: 8003_P3
                          StartTime: 11:00:00
                          EndTime: 11:50:00
                        - Period:
                            LocalId: 8003_P4
                          StartTime: 12:40:00
                          EndTime: 13:30:00
                        - Period:
                            LocalId: 8003_P5
                          StartTime: 13:45:00
                          EndTime: 14:45:00
          application/xml:
            schema:
              type: object
              properties:
                ScheduleDates:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
            example: |-
              <ScheduleDates>
                <ScheduleDate>
                  <ScheduleDateLocalId>8003_2020_001</ScheduleDateLocalId>
                  <CalendarDate>2020-01-27</CalendarDate>
                  <Organisation><RefId>8003</RefId></Organisation>
                  <Term><LocalId>2020_8003_T1<LocalId></Term>
                  <Schedule><LocalId>8003_Sched_2020</LocalId></Schedule>
                  <AcademicDay><LocalId>8003_Day_A</LocalId></AcademicDay>
                  <BellSchedule>LocalId>8003_Regular</LocalId></BellSchedule>
                  <SchedulePeriodList>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_HR<LocalId></Period>
                      <StartTime>08:45:00</StartTime>
                      <EndTime>08:55:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P1</LocalId></Period>
                      <StartTime>09:00:00</StartTime>
                      <EndTime>09:50:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P2</LocalId></Period>
                      <StartTime>09:55:00</StartTime>
                      <EndTime>10:45:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P3</LocalId></Period>
                      <StartTime>11:00:00</StartTime>
                      <EndTime>11:50:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P4</LocalId></Period>
                      <StartTime>12:40:00</StartTime>
                      <EndTime>13:30:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P5</LocalId></Period>
                      <StartTime>13:45:00</StartTime>
                      <EndTime>14:45:00<EndTime>
                    </SchedulePeriodTime>
                  </SchedulePeriodList>
                </ScheduleDate>
              </ScheduleDates>
      responses:
        "200":
          description: Create successful; returns created objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleDates:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  equestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleDates:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  equestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects created, some creates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: ScheduleDate
                      properties:
                        ScheduleDate:
                          $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                - ScheduleDate:
                    ScheduleDateLocalId: 8003_2020_001
                    CalendarDate: 2020-01-27
                    Organisation:
                      RefId: "8003"
                    Term:
                      LocalId: 2020_8003_T1
                    Schedule:
                      LocalId: 8003_Sched_2020
                    AcademicDay:
                      LocalId: 8003_Day_A
                    BellSchedule:
                      LocalId: 8003_Regular
                    SchedulePeriodList:
                      SchedulePeriodTime:
                        - Period:
                            LocalId: 8003_HR
                          StartTime: 08:45:00
                          EndTime: 08:55:00
                        - Period:
                            LocalId: 8003_P1
                          StartTime: 09:00:00
                          EndTime: 09:50:00
                        - Period:
                            LocalId: 8003_P2
                          StartTime: 09:55:00
                          EndTime: 10:45:00
                        - Period:
                            LocalId: 8003_P3
                          StartTime: 11:00:00
                          EndTime: 11:50:00
                        - Period:
                            LocalId: 8003_P4
                          StartTime: 12:40:00
                          EndTime: 13:30:00
                        - Period:
                            LocalId: 8003_P5
                          StartTime: 13:45:00
                          EndTime: 14:45:00
                - Error:
                    error: 1009
                    when: 2020-07-16T20:00:46.000Z
                    errorstr: "Bad field: PersonInfo-Name-FamilyName: missing required
                      field PersonInfo-Name-FamilyName (LastName) 'None'"
                    localId: ST-002
                    refId: null
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: ScheduleDate
                          properties:
                            ScheduleDate:
                              $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example: >-
                <Response>
                  <ScheduleDate>
                    <ScheduleDateLocalId>8003_2020_001</ScheduleDateLocalId>
                    <CalendarDate>2020-01-27</CalendarDate>
                    <Organisation><RefId>8003</RefId></Organisation>
                    <Term><LocalId>2020_8003_T1<LocalId></Term>
                    <Schedule><LocalId>8003_Sched_2020</LocalId></Schedule>
                    <AcademicDay><LocalId>8003_Day_A</LocalId></AcademicDay>
                    <BellSchedule>LocalId>8003_Regular</LocalId></BellSchedule>
                    <SchedulePeriodList>
                      <SchedulePeriodTime>
                        <Period><LocalId>8003_HR<LocalId></Period>
                        <StartTime>08:45:00</StartTime>
                        <EndTime>08:55:00</EndTime>
                      </SchedulePeriodTime>
                      <SchedulePeriodTime>
                        <Period><LocalId>8003_P1</LocalId></Period>
                        <StartTime>09:00:00</StartTime>
                        <EndTime>09:50:00</EndTime>
                      </SchedulePeriodTime>
                      <SchedulePeriodTime>
                        <Period><LocalId>8003_P2</LocalId></Period>
                        <StartTime>09:55:00</StartTime>
                        <EndTime>10:45:00</EndTime>
                      </SchedulePeriodTime>
                      <SchedulePeriodTime>
                        <Period><LocalId>8003_P3</LocalId></Period>
                        <StartTime>11:00:00</StartTime>
                        <EndTime>11:50:00</EndTime>
                      </SchedulePeriodTime>
                      <SchedulePeriodTime>
                        <Period><LocalId>8003_P4</LocalId></Period>
                        <StartTime>12:40:00</StartTime>
                        <EndTime>13:30:00</EndTime>
                      </SchedulePeriodTime>
                      <SchedulePeriodTime>
                        <Period><LocalId>8003_P5</LocalId></Period>
                        <StartTime>13:45:00</StartTime>
                        <EndTime>14:45:00<EndTime>
                      </SchedulePeriodTime>
                    </SchedulePeriodList>
                  </ScheduleDate>
                  <Error>
                    <error>1009</error>
                    <when>2020-07-16T20:00:46.000Z</when>
                    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>
                    <localId>ST-002</localId>
                    <refId/>
                  </Error>      
                </Response>
    get:
      tags:
        - ScheduleDate
        - ScheduleDateBulk
      summary: Retrieve one or more ScheduleDates
      description: Bulk operation to retrieve all available timetable ScheduleDates for a
        particular <a href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: getScheduleDates
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleDates:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  equestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleDates:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  equestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - ScheduleDate
        - ScheduleDateBulk
      summary: Update one or more ScheduleDates
      description: Bulk operation to update one or more timetable ScheduleDates for a
        particular <a href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: updateScheduleDates
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      requestBody:
        description: CRUD operation on ScheduleDate
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleDates:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/req\
                uestBody/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                ScheduleDates:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/req\
                uestBody/content/application~1xml/example"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleDates:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  equestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleDates:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  equestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects updated, some updates failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: ScheduleDate
                      properties:
                        ScheduleDate:
                          $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  esponses/default/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: ScheduleDate
                          properties:
                            ScheduleDate:
                              $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  esponses/default/content/application~1xml/example"
    patch:
      tags:
        - ScheduleDate
        - ScheduleDateBulk
      summary: Patch one or more ScheduleDates
      description: Bulk operation to update one or more fields of one or more timetable
        ScheduleDates for a particular <a href="#tag/Schedule">Schedule</a> at
        the given Provider
      operationId: patchScheduleDates
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
      requestBody:
        description: CRUD operation on ScheduleDate
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleDates:
                  $ref: jsonSchema.NZ.update.yaml#/properties/ScheduleDates
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/req\
                uestBody/content/application~1json/example"
          application/xml:
            schema:
              type: object
              properties:
                ScheduleDates:
                  $ref: jsonSchema.NZ.update.yaml#/properties/ScheduleDates
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/req\
                uestBody/content/application~1xml/example"
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleDates:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  equestBody/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleDates:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDates
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  equestBody/content/application~1xml/example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          description: Some objects patched, some patches failed
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Error
                      properties:
                        Error:
                          $ref: "#/paths/~1organisation/post/responses/default/cont\
                            ent/application~1json/schema/items/anyOf/0/properti\
                            es/Error"
                    - type: object
                      title: ScheduleDate
                      properties:
                        ScheduleDate:
                          $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  esponses/default/content/application~1json/example"
            application/xml:
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Error
                          properties:
                            Error:
                              $ref: "#/paths/~1organisation/post/responses/default/\
                                content/application~1xml/schema/properties/Resp\
                                onse/items/anyOf/0/properties/Error"
                        - type: object
                          title: ScheduleDate
                          properties:
                            ScheduleDate:
                              $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate/post/r\
                  esponses/default/content/application~1xml/example"
  "/schedule/{ScheduleRefId}/scheduledate/{ScheduleDateRefId}":
    get:
      tags:
        - ScheduleDate
        - ScheduleDateSingle
      summary: Retrieve a single ScheduleDate
      description: Retrieve a particular timetable ScheduleDate for a particular <a
        href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: getScheduleDate
      parameters:
        - $ref: "#/paths/~1organisation/get/parameters/0"
        - $ref: "#/paths/~1search/get/parameters/4"
        - $ref: "#/paths/~1search/get/parameters/3"
        - $ref: "#/paths/~1organisation/get/parameters/3"
        - $ref: "#/paths/~1search/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/5"
        - $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D~1organisationrelat\
            ionship/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/5"
        - $ref: "#/paths/~1organisation/get/parameters/6"
        - $ref: "#/paths/~1organisation/get/parameters/7"
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
        - name: ScheduleDateRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify this Schedule
            Date.</p>
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleDate:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                ScheduleDate:
                  ScheduleDateLocalId: 8003_2020_001
                  CalendarDate: 2020-01-27
                  Organisation:
                    RefId: "8003"
                  Term:
                    LocalId: 2020_8003_T1
                  Schedule:
                    LocalId: 8003_Sched_2020
                  AcademicDay:
                    LocalId: 8003_Day_A
                  BellSchedule:
                    LocalId: 8003_Regular
                  SchedulePeriodList:
                    SchedulePeriodTime:
                      - Period:
                          LocalId: 8003_HR
                        StartTime: 08:45:00
                        EndTime: 08:55:00
                      - Period:
                          LocalId: 8003_P1
                        StartTime: 09:00:00
                        EndTime: 09:50:00
                      - Period:
                          LocalId: 8003_P2
                        StartTime: 09:55:00
                        EndTime: 10:45:00
                      - Period:
                          LocalId: 8003_P3
                        StartTime: 11:00:00
                        EndTime: 11:50:00
                      - Period:
                          LocalId: 8003_P4
                        StartTime: 12:40:00
                        EndTime: 13:30:00
                      - Period:
                          LocalId: 8003_P5
                        StartTime: 13:45:00
                        EndTime: 14:45:00
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleDate:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example: |-
                <ScheduleDate>
                  <ScheduleDateLocalId>8003_2020_001</ScheduleDateLocalId>
                  <CalendarDate>2020-01-27</CalendarDate>
                  <Organisation><RefId>8003</RefId></Organisation>
                  <Term><LocalId>2020_8003_T1<LocalId></Term>
                  <Schedule><LocalId>8003_Sched_2020</LocalId></Schedule>
                  <AcademicDay><LocalId>8003_Day_A</LocalId></AcademicDay>
                  <BellSchedule>LocalId>8003_Regular</LocalId></BellSchedule>
                  <SchedulePeriodList>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_HR<LocalId></Period>
                      <StartTime>08:45:00</StartTime>
                      <EndTime>08:55:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P1</LocalId></Period>
                      <StartTime>09:00:00</StartTime>
                      <EndTime>09:50:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P2</LocalId></Period>
                      <StartTime>09:55:00</StartTime>
                      <EndTime>10:45:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P3</LocalId></Period>
                      <StartTime>11:00:00</StartTime>
                      <EndTime>11:50:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P4</LocalId></Period>
                      <StartTime>12:40:00</StartTime>
                      <EndTime>13:30:00</EndTime>
                    </SchedulePeriodTime>
                    <SchedulePeriodTime>
                      <Period><LocalId>8003_P5</LocalId></Period>
                      <StartTime>13:45:00</StartTime>
                      <EndTime>14:45:00<EndTime>
                    </SchedulePeriodTime>
                  </SchedulePeriodList>
                </ScheduleDate>
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation/get/responses/default"
    put:
      tags:
        - ScheduleDate
        - ScheduleDateSingle
      summary: Update a single ScheduleDate
      description: Update a particular timetable ScheduleDate for a particular <a
        href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: updateScheduleDate
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
        - name: ScheduleDateRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify this Schedule
            Date.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on ScheduleDate
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleDate:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate~1%7BSche\
                duleDateRefId%7D/get/responses/200/content/application~1json/ex\
                ample"
          application/xml:
            schema:
              type: object
              properties:
                ScheduleDate:
                  $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate~1%7BSche\
                duleDateRefId%7D/get/responses/200/content/application~1xml/exa\
                mple"
      responses:
        "200":
          description: Update successful; returns updated objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleDate:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate~1%7BSc\
                  heduleDateRefId%7D/get/responses/200/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleDate:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate~1%7BSc\
                  heduleDateRefId%7D/get/responses/200/content/application~1xml\
                  /example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/put/responses/defa\
            ult"
    patch:
      tags:
        - ScheduleDate
        - ScheduleDateSingle
      summary: Patch a single ScheduleDate
      description: Update one or more fields of a particular timetable ScheduleDate for a
        particular <a href="#tag/Schedule">Schedule</a> at the given Provider
      operationId: patchScheduleDate
      parameters:
        - $ref: "#/paths/~1search/get/parameters/6"
        - $ref: "#/paths/~1staffpersonal/post/parameters/2"
        - $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduleperiod/post/param\
            eters/3"
        - name: ScheduleDateRefId
          in: path
          description: <p> The ID (GUID) assigned to uniquely identify this Schedule
            Date.</p>
          required: true
          schema:
            type: string
      requestBody:
        description: CRUD operation on ScheduleDate
        content:
          application/json:
            schema:
              type: object
              properties:
                ScheduleDate:
                  $ref: jsonSchema.NZ.update.yaml#/properties/ScheduleDate
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate~1%7BSche\
                duleDateRefId%7D/get/responses/200/content/application~1json/ex\
                ample"
          application/xml:
            schema:
              type: object
              properties:
                ScheduleDate:
                  $ref: jsonSchema.NZ.update.yaml#/properties/ScheduleDate
            example:
              $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate~1%7BSche\
                duleDateRefId%7D/get/responses/200/content/application~1xml/exa\
                mple"
      responses:
        "200":
          description: Patch successful; returns patched objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  ScheduleDate:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate~1%7BSc\
                  heduleDateRefId%7D/get/responses/200/content/application~1jso\
                  n/example"
            application/xml:
              schema:
                type: object
                properties:
                  ScheduleDate:
                    $ref: jsonSchema.NZ.create.yaml#/properties/ScheduleDate
              example:
                $ref: "#/paths/~1schedule~1%7BScheduleRefId%7D~1scheduledate~1%7BSc\
                  heduleDateRefId%7D/get/responses/200/content/application~1xml\
                  /example"
        "401":
          $ref: "#/paths/~1search/get/responses/401"
        "422":
          $ref: "#/paths/~1search/get/responses/422"
        default:
          $ref: "#/paths/~1organisation~1%7BOrganisationRefId%7D/patch/responses/de\
            fault"
components:
  securitySchemes:
    sifDataObject:
      type: oauth2
      description: OAuth 2.0 authentication is applied to all SIF data objects. Scope
        provided in the  JWT access token will be verified against Te Rito user
        account role, that is separately provisioned.
      flows:
        clientCredentials:
          tokenUrl: https://login.microsoftonline.com/6418b52e-37db-4261-bcf7-d64c4b0a59f5/oauth2/v2.0/token
          scopes:
            FIRST: 'Authorised as FIRST integration hub, able to maintain <a
              href="#tag/Organisation">Organisation</a> and  <a
              href="#tag/OrganisationRelationship">OrganisationRelationship</a>.
              SIF role # <code>2501</code>'
            SUPS: 'Authorised as Secondary User Provisioning System (SUPS)
              integration hub, able to maintain <a
              href="#tag/StaffPersonal">StaffPersonal</a> and  <a
              href="#tag/StaffAssignment">StaffAssignment</a>. SIF role #
              <code>2502</code>'
            NZQA: 'Authorised client able to maintain <a
              href="#tag/LearningStandard">LearningStandard</a> and  <a
              href="#tag/Credential">Credential</a>. SIF role #
              <code>2503</code>'
            LSR: 'Authorised client able to maintain <a
              href="#tag/StudentLearningSupport">StudentLearningSupport</a>, <a
              href="#tag/StudentLearningSupportResponse">StudentLearningSupportResponse</a>
              and Learning Support need flavours of <a
              href="#tag/WellbeingCharacteristic">WellbeingCharacteristic</a>.
              SIF role # <code>2504</code>'
            SMS: "Authorised as SMS Client on behalf of a particular provider
              (School/ECE). SIF role # <code>2505</code>"
